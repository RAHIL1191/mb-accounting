{"version":3,"sources":["Header.js","Home.js","api/bootapi.js","Customer.js","AllCustomers.js","AddCustomer.js","Menus.js","ViewCustomer.js","AddEntry.js","CashBook.js","Ledger.js","UpdateSingleEntry.js","Receipt.js","UpdateName.js","DeleteEntry.js","PDF.js","App.js","reportWebVitals.js","index.js"],"names":["Header","name","Card","className","CardBody","Home","React","forwardRef","props","ref","useEffect","document","title","Jumbotron","Container","to","Button","color","base_url","Customer","course","update","CardSubtitle","onClick","id","axios","delete","then","response","toast","success","error","AllCustomers","get","console","log","data","position","setCustomers","useState","customers","searchTerm","setSearchTerm","updateCustomer","filter","c","pagenumber","setPageNumber","pageVisited","pageCount","Math","ceil","length","displayUsers","slice","map","item","displaySingleUser","val","toUpperCase","includes","type","placeholder","onChange","e","target","value","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","AddCustomer","customer","setCustomer","postDatatoServer","post","Form","onSubmit","reset","preventDefault","FormGroup","for","style","width","Input","required","maxlength","Menus","ListGroup","tag","horizontal","ViewCustomer","a","fetch","firstName","result","json","setperson","person","customerlist","transactionEffectiveDate","creditAmountReceived","debitAmountReceived","totalAmountPending","abs","fluid","align","Table","rowsPer","UpdateCustomer","match","params","res","getElementById","put","input","creditInput","addEventListener","event","keyCode","focus","inputDebit","defaultValue","readOnly","autoFocus","description","Balance","balance","setBalance","lastName","receiptLink","paymentLink","fromDate","toDate","datewise","setDatewise","todayDate","whiteSpace","customerdebitlist","datewiseCustomers","EndingDateWiseBalance","class","endingBalance","marginLeft","openingBalance","Row","Col","md","CashBook","dates","setDates","dateWiseBalance","setDateWiseBalance","datelist","datedebitlist","inputValue","setInputValue","height","Autocomplete","onInputChange","newInputValue","options","getOptionLabel","option","renderInput","TextField","label","variant","size","UpdateSingleEntry","entry","setEntry","isClicked","setIsClicked","getCustomerDetail","amountPendingEntry","boolean","withRouter","inputs","customerData","Credit","UpdateName","DeleteEntry","isVerified","setIsVerified","setValue","deleteCourse","htmlFor","alert","MyDocument","StyleSheet","create","page","backgroundColor","section","margin","padding","viewer","window","innerWidth","innerHeight","componentRef","useRef","content","current","trigger","App","path","component","exact","PDF","AddEntry","Receipt","Ledger","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.ea041be2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { CardBody, Card } from \"reactstrap\";\r\n\r\nfunction Header({ name }) {\r\n  return (\r\n    <div>\r\n      <Card className=\"bg-warning my-2\">\r\n        <CardBody>\r\n          <h1 className=\"text-center my-2\">Welcome to Mulchand Badridas</h1>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { Jumbotron, Button, Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = React.forwardRef((props, ref) => {\r\n  useEffect(() => {\r\n    document.title = \"Home\";\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      <Jumbotron className=\"text-center\">\r\n        <h1> Welcome to Customer Details</h1>\r\n\r\n        <Container>\r\n          <Link to={`/add-customer`}>\r\n            <Button color=\"success\">Start Using</Button>\r\n          </Link>\r\n        </Container>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n});\r\nexport default Home;\r\n","const base_url = \"https://mb-accounting.herokuapp.com/\";\r\n//\"http://localhost:8080\"\r\nexport default base_url;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, CardBody, CardSubtitle, Button, Container } from \"reactstrap\";\r\nimport base_url from \"./api/bootapi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Customer = ({ course, update }) => {\r\n  const deleteCourse = (id) => {\r\n    axios.delete(`${base_url}/customer/${id}`).then(\r\n      (response) => {\r\n        toast.success(\"deleted successfully\");\r\n        update(id);\r\n      },\r\n      (error) => {\r\n        toast.error(\"Data Exists\");\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card className=\"text-center\">\r\n      <CardBody>\r\n        <CardSubtitle className=\"font-weight-bold\">{course.name}</CardSubtitle>\r\n        <Container className=\"text-center\">\r\n          <Link to={`/update-customer/${course.name}`}>\r\n            <Button color=\"warning\">Add Entry</Button>\r\n          </Link>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Link to={`/pdf/${course.name}`}>\r\n            <Button color=\"success\">View</Button>\r\n          </Link>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Button\r\n            color=\"danger\"\r\n            onClick={() => {\r\n              deleteCourse(course.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Link to={`/update-name/${course.id}`}>\r\n            <Button color=\"success\">Update</Button>\r\n          </Link>\r\n        </Container>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default Customer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Customer from \"./Customer\";\r\nimport base_url from \"./api/bootapi\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./AllCustomers.css\";\r\n\r\nconst AllCustomers = () => {\r\n  //**********************View Customers Page On Ui******************************************* */\r\n\r\n  useEffect(() => {\r\n    document.title = \"All Customers\";\r\n  }, []);\r\n\r\n  //function to call server\r\n  const getAllCustomers = () => {\r\n    axios.get(`${base_url}/customer`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        if (response.data === []) {\r\n          toast.success(\"customer has been loaded\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        }\r\n        setCustomers(response.data);\r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllCustomers();\r\n  }, []);\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const updateCustomer = (id) => {\r\n    setCustomers(customers.filter((c) => c.id !== id));\r\n  };\r\n\r\n  //*************** */ for Pagination\r\n  const [pagenumber, setPageNumber] = useState(0);\r\n  const usersPage = 5;\r\n  const pageVisited = pagenumber * usersPage;\r\n  const pageCount = Math.ceil(customers.length / usersPage);\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  };\r\n  const displayUsers = customers\r\n    .slice(pageVisited, pageVisited + usersPage)\r\n    .map((item) => {\r\n      return <Customer key={item.id} course={item} update={updateCustomer} />;\r\n    });\r\n\r\n  const displaySingleUser = customers\r\n    .filter((val) => {\r\n      if (val.name.toUpperCase().includes(searchTerm.toUpperCase())) {\r\n        return val;\r\n      }\r\n    })\r\n    .map((item) => {\r\n      return <Customer key={item.id} course={item} update={updateCustomer} />;\r\n    });\r\n\r\n  // ************************************************\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center\">AllCustomers</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        onChange={(e) => {\r\n          setSearchTerm(e.target.value);\r\n        }}\r\n      />\r\n      {searchTerm === \"\" ? displayUsers : displaySingleUser}\r\n      <br />\r\n      <br />\r\n      <ReactPaginate\r\n        previousLabel={\"Previous\"}\r\n        nextLabel={\"Next\"}\r\n        pageCount={pageCount}\r\n        onPageChange={changePage}\r\n        containerClassName={\"paginationBttns\"}\r\n        previousLinkClassName={\"previousBttn\"}\r\n        nextLinkClassName={\"nextBttn\"}\r\n        disabledClassName={\"paginationDisabled\"}\r\n        activeClassName={\"paginationActive\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default AllCustomers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, FormGroup, Input } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport base_url from \"./api/bootapi\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddCustomer = () => {\r\n  //********************************************************Add Customer Page On UI*********************************************** */\r\n  useEffect(() => {\r\n    document.title = \"Add Customer\";\r\n  }, []);\r\n\r\n  const [customer, setCustomer] = useState({});\r\n\r\n  //form handler\r\n  const handleForm = (e) => {\r\n    console.log(customer);\r\n    postDatatoServer(customer);\r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  //creating function t post data to server\r\n  const postDatatoServer = (data) => {\r\n    axios.post(`${base_url}/customer`, data).then(\r\n      (response) => {\r\n        console.log(response);\r\n        if (response.data === \"Customer Already Exists\") {\r\n          toast.error(\"Customer Already Exists\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        } else {\r\n          toast.success(\"Customer has been added successfully\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        console.log(\"error\");\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center\">Add Customer</h1>\r\n      <br></br>\r\n\r\n      <Form onSubmit={handleForm}>\r\n        <FormGroup>\r\n          <label for=\"firstName\" style={{ width: 300 }}>\r\n            Name\r\n          </label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            id=\"firstName\"\r\n            required\r\n            maxlength=\"45\"\r\n            onChange={(e) => {\r\n              setCustomer({ ...customer, name: e.target.value.toUpperCase() });\r\n            }}\r\n            style={{ width: 300 }}\r\n          />\r\n        </FormGroup>\r\n        <br></br>\r\n\r\n        <Container>\r\n          <Button type=\"submit\" color=\"success\">\r\n            Add Customer\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Button type=\"reset\" color=\"warning\">\r\n            Clear\r\n          </Button>\r\n        </Container>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default AddCustomer;\r\n","import React from 'react'\r\nimport { ListGroup} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Menus=() =>{\r\n    return(\r\n        <ListGroup>\r\n            <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"/\">Home</Link>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"/view-customers\">View Customers</Link>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"/add-customer\">Add Customer</Link>\r\n\r\n            <ListGroup horizontal>\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to={`/Balance-CashReceipt/${true}`} >Cash Receipt</Link>\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to={`/Balance-CashPayment/${true}`} >Cash Payment</Link>\r\n            </ListGroup>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"/Balance-CashBook\" >Ledger</Link>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"/Balance\" >CashBook</Link>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"#!\">About</Link>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"#!\">Contact Us</Link>\r\n        </ListGroup>\r\n    );\r\n};\r\nexport default Menus;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button, Container, Table } from \"reactstrap\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./AllCustomers.css\";\r\nimport { TablePagination } from \"@material-ui/core\";\r\nimport base_url from \"./api/bootapi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Home from \"./Home\";\r\nimport * as htmlToImage from \"html-to-image\";\r\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from \"html-to-image\";\r\nimport { jsPDF } from \"jspdf\";\r\n\r\nconst ViewCustomer = React.forwardRef((props, ref) => {\r\n  //*************************************************This Page Is Called When View Button On View Customers Page is clicked from UI***************************** */\r\n\r\n  useEffect(async () => {\r\n    let result = await fetch(`${base_url}/customer/details/${props.firstName}`);\r\n    result = await result.json();\r\n    setperson(result);\r\n  }, []);\r\n\r\n  const [person, setperson] = useState([]);\r\n\r\n  //*************** */ for Pagination\r\n  const [pagenumber, setPageNumber] = useState(0);\r\n  const usersPage = 10;\r\n  const pageVisited = pagenumber * usersPage;\r\n  const pageCount = Math.ceil(person.length / usersPage);\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  };\r\n  const customerlist = person\r\n    .slice(pageVisited, pageVisited + usersPage)\r\n    .map((customer) => {\r\n      return (\r\n        <tr key={customer.id}>\r\n          <td>{customer.id}</td>\r\n          <td>{customer.firstName}</td>\r\n          <td>{customer.transactionEffectiveDate}</td>\r\n          <td>{customer.creditAmountReceived}</td>\r\n          <td>{customer.debitAmountReceived}</td>\r\n          <td>\r\n            {customer.totalAmountPending > 0\r\n              ? customer.totalAmountPending + \" DR\"\r\n              : Math.abs(customer.totalAmountPending) + \" CR\"}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  //************************************************\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      <Container fluid>\r\n        <h3 align=\"center\">Customer Transactions</h3>\r\n        <br></br>\r\n        <Table className=\"mt-4\">\r\n          <thead>\r\n            <tr>\r\n              <th width=\"10%\">Voucher Number</th>\r\n              <th width=\"10%\">FirstName</th>\r\n              <th width=\"10%\">Received Date</th>\r\n              <th width=\"10%\">Credit Amount</th>\r\n              <th width=\"10%\">Debit Amount</th>\r\n              <th width=\"10%\">AmountPending</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{customerlist}</tbody>\r\n        </Table>\r\n\r\n        <ReactPaginate\r\n          rowsPer\r\n          previousLabel={\"Previous\"}\r\n          nextLabel={\"Next\"}\r\n          pageCount={pageCount}\r\n          onPageChange={changePage}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ViewCustomer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, FormGroup, Input } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport base_url from \"./api/bootapi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst UpdateCustomer = (props) => {\r\n  //****************************This Page will called when you click add entry button from view customers page on ui */\r\n  const [person, setperson] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${base_url}/customer/${props.match.params.firstName}`)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setperson(data);\r\n        document.getElementById(\"totalAmountPending\").value =\r\n          data.totalAmountPending > 0\r\n            ? data.totalAmountPending + \" DR\"\r\n            : Math.abs(data.totalAmountPending) + \" CR\";\r\n      });\r\n  }, []);\r\n\r\n  //form handler\r\n  const handleForm = (e) => {\r\n    console.log(person);\r\n    postDatatoServer(person);\r\n\r\n    e.target.reset();\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  //creating function t post data to server\r\n  const postDatatoServer = (data) => {\r\n    if (data.creditAmountReceived === 0 && data.debitAmountReceived === 0) {\r\n      toast.error(\"Please enter credit or debit Amount\", {\r\n        position: \"bottom-center\",\r\n      });\r\n    } else {\r\n      axios.put(`${base_url}/customer/`, data).then(\r\n        (response) => {\r\n          console.log(response);\r\n          setperson({\r\n            ...person,\r\n            totalAmountPending: response.data.totalAmountPending,\r\n          });\r\n          document.getElementById(\"totalAmountPending\").value =\r\n            response.data.totalAmountPending;\r\n          toast.success(\"Entry has been added successfully\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  //for moving to next input box on pressing enter\r\n\r\n  let input = document.getElementById(\"description\");\r\n  let creditInput = document.getElementById(\"creditAmountReceived\");\r\n  if (input != null && creditInput != null) {\r\n    input.addEventListener(\"keydown\", function (event) {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        document.getElementById(\"creditAmountReceived\").focus();\r\n      }\r\n    });\r\n    creditInput.addEventListener(\"keydown\", function (event) {\r\n      if (event.keyCode === 13) {\r\n        document.getElementById(\"debitAmountReceived\").focus();\r\n      }\r\n    });\r\n  }\r\n  //for moving  back  to previous input box on pressing escape\r\n  let inputDebit = document.getElementById(\"debitAmountReceived\");\r\n  if (input != null && creditInput != null) {\r\n    inputDebit.addEventListener(\"keydown\", function (event) {\r\n      if (event.keyCode === 27) {\r\n        event.preventDefault();\r\n        document.getElementById(\"creditAmountReceived\").focus();\r\n      }\r\n    });\r\n    creditInput.addEventListener(\"keydown\", function (event) {\r\n      if (event.keyCode === 27) {\r\n        document.getElementById(\"description\").focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  let des = () => {\r\n    document.getElementById(\"description\").value = \"rahil\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center\">Add Entry</h1>\r\n      <br></br>\r\n\r\n      <Form onSubmit={handleForm}>\r\n        <FormGroup>\r\n          <label for=\"firstName\" style={{ width: 300 }}>\r\n            FirstName\r\n          </label>\r\n          <Input\r\n            type=\"text\"\r\n            defaultValue={person.firstName}\r\n            readOnly=\"true\"\r\n            style={{ width: 300 }}\r\n            id=\"firstname\"\r\n          />\r\n        </FormGroup>\r\n        <br></br>\r\n\r\n        <FormGroup>\r\n          <label for=\"description\" style={{ width: 300 }}>\r\n            Description\r\n          </label>\r\n          <Input\r\n            type=\"textarea\"\r\n            placeholder=\"Enter Description\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            autoFocus\r\n            maxlength=\"110\"\r\n            onClick={des}\r\n            onChange={(e) => {\r\n              setperson({ ...person, description: e.target.value });\r\n            }}\r\n            style={{ width: 300 }}\r\n          />\r\n        </FormGroup>\r\n        <br></br>\r\n\r\n        <FormGroup>\r\n          <label for=\"totalAmountPending\" style={{ width: 300 }}>\r\n            Total Amount Pending\r\n          </label>\r\n          <Input\r\n            type=\"text\"\r\n            defaultValue={person.totalAmountPending}\r\n            readOnly=\"totalAmountPending\"\r\n            id=\"totalAmountPending\"\r\n            style={{ width: 300 }}\r\n          />\r\n        </FormGroup>\r\n        <br></br>\r\n\r\n        <FormGroup>\r\n          <label for=\"creditAmountReceived\" style={{ width: 300 }}>\r\n            Credit Amount\r\n          </label>\r\n          <Input\r\n            placeholder=\"Enter Credit Amount\"\r\n            name=\"creditAmountReceived\"\r\n            id=\"creditAmountReceived\"\r\n            onChange={(e) => {\r\n              setperson({ ...person, creditAmountReceived: e.target.value });\r\n            }}\r\n            style={{ width: 300 }}\r\n          />\r\n        </FormGroup>\r\n        <br></br>\r\n\r\n        <FormGroup>\r\n          <label for=\"debitAmountReceived\" style={{ width: 300 }}>\r\n            Debit Amount\r\n          </label>\r\n          <Input\r\n            type=\"number\"\r\n            placeholder=\"Enter Debit Amount\"\r\n            name=\"debitAmountReceived\"\r\n            id=\"debitAmountReceived\"\r\n            onChange={(e) => {\r\n              setperson({ ...person, debitAmountReceived: e.target.value });\r\n            }}\r\n            style={{ width: 300 }}\r\n          />\r\n        </FormGroup>\r\n        <br></br>\r\n\r\n        <FormGroup>\r\n          <label for=\"transactionEffectiveDate\" style={{ width: 300 }}>\r\n            Transaction Date\r\n          </label>\r\n          <Input\r\n            type=\"date\"\r\n            placeholder=\"Enter Date\"\r\n            defaultValue={person.transactionEffectiveDate}\r\n            readOnly=\"true\"\r\n            name=\"transactionEffectiveDate\"\r\n            id=\"transactionEffectiveDate\"\r\n            required\r\n            style={{ width: 300 }}\r\n          />\r\n        </FormGroup>\r\n\r\n        <Container>\r\n          <Button type=\"submit\" color=\"success\">\r\n            Add Entry\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Button type=\"reset\" color=\"warning\">\r\n            Clear\r\n          </Button>\r\n        </Container>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default UpdateCustomer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Container, Table, Button } from \"reactstrap\";\r\nimport base_url from \"./api/bootapi\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./AllCustomers.css\";\r\n\r\nconst Balance = () => {\r\n  const data = {\r\n    id: 1,\r\n    firstName: \"RATAN MAJUR\",\r\n    lastName: null,\r\n    transactionEffectiveDate: null,\r\n    totalAmountPending: 0,\r\n    description: null,\r\n    creditAmountReceived: 0,\r\n    debitAmountReceived: 0,\r\n    receiptLink: null,\r\n    paymentLink: null,\r\n    fromDate: \"2021-04-01\",\r\n    toDate: \"2022-03-31\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Cash Book\";\r\n  }, []);\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [balance, setBalance] = useState([]);\r\n  const [datewise, setDatewise] = useState(data);\r\n\r\n  const Balance = () => {\r\n    axios.get(`${base_url}/customer/balance`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setCustomers(response.data);\r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const EndingBalance = () => {\r\n    axios.get(`${base_url}/customer/endingBalance`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setBalance(response.data);\r\n        setDatewise({ ...datewise, fromDate: response.data.todayDate });\r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n  // for getting details on selected date\r\n  const datewiseCustomers = (data) => {\r\n    if (data.fromDate > data.toDate) {\r\n      toast.error(\"From Date Should Be Bigger\", {\r\n        position: \"bottom-center\",\r\n      });\r\n    } else {\r\n      axios.put(`${base_url}/customer/datewiseDetails`, data).then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          if (response.data.length === 0) {\r\n            toast.error(\"No Record Found\", {\r\n              position: \"bottom-center\",\r\n            });\r\n          }\r\n          setCustomers(response.data);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n          toast.error(\"something went wrong\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const EndingDateWiseBalance = (data) => {\r\n    axios.put(`${base_url}/customer/getListFromDate`, data).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setBalance(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  // pagination\r\n  const [pagenumber, setPageNumber] = useState(0);\r\n\r\n  const usersPage = 9;\r\n  const pageVisited = pagenumber * usersPage;\r\n  const pageCount = Math.ceil(customers.length / usersPage);\r\n  const changePage = ({ selected }) => {\r\n    setPageNumber(selected);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Balance();\r\n    EndingBalance();\r\n  }, []);\r\n\r\n  const customerlist = customers\r\n    .filter((val) => {\r\n      if (val.creditAmountReceived !== 0) {\r\n        return val;\r\n      }\r\n    })\r\n    .map((customer) => {\r\n      return (\r\n        <tr key={customer.id}>\r\n          <td>{customer.id}</td>\r\n          <td>{customer.transactionEffectiveDate}</td>\r\n          <td style={{ whiteSpace: \"nowrap\" }}>{customer.firstName}</td>\r\n          <td>{customer.creditAmountReceived}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  const customerdebitlist = customers\r\n    .filter((val) => {\r\n      if (val.debitAmountReceived !== 0) {\r\n        return val;\r\n      }\r\n    })\r\n    .map((customer) => {\r\n      return (\r\n        <tr key={customer.id}>\r\n          <td>{customer.id}</td>\r\n          <td>{customer.transactionEffectiveDate}</td>\r\n          <td style={{ whiteSpace: \"nowrap\" }}>{customer.firstName}</td>\r\n          <td>{customer.debitAmountReceived}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  const handleForm = (e) => {\r\n    console.log(datewise);\r\n    datewiseCustomers(datewise);\r\n    EndingDateWiseBalance(datewise);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br></br>\r\n      <div>\r\n        <form onSubmit={handleForm} class=\"form-inline\">\r\n          <label for=\"endingBalance\">Ending Balance:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"endingBalance\"\r\n            readOnly=\"true\"\r\n            defaultValue={balance.endingBalance}\r\n            readOnly=\"true\"\r\n            style={{ marginLeft: 5 }}\r\n          />\r\n          <label for=\"openingBalance\" style={{ marginLeft: 25 }}>\r\n            Opening Balance:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"openingBalance\"\r\n            readOnly=\"true\"\r\n            defaultValue={balance.openingBalance}\r\n            readOnly=\"true\"\r\n            style={{ marginLeft: 5 }}\r\n          />\r\n          <br /> <br />\r\n          <label for=\"todayDate\" style={{ marginLeft: 75 }}>\r\n            Date:\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"todayDate\"\r\n            defaultValue={balance.todayDate}\r\n            style={{ marginLeft: 5 }}\r\n            onChange={(e) => {\r\n              setDatewise({ ...datewise, fromDate: e.target.value });\r\n            }}\r\n          />\r\n          <Container>\r\n            <Button type=\"submit\" color=\"success\">\r\n              Search\r\n            </Button>\r\n          </Container>\r\n        </form>\r\n      </div>\r\n      <br></br>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n              <tr>\r\n                <th width=\"10%\">Voucher No.</th>\r\n                <th width=\"15%\">Date</th>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"15%\">Rs</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{customerlist}</tbody>\r\n          </Table>\r\n        </Col>\r\n        <Col md={6}>\r\n          <Table className=\"mt-4 offset-2\">\r\n            <thead>\r\n              <tr>\r\n                <th width=\"10%\">Voucher No.</th>\r\n                <th width=\"15%\">Date</th>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"15%\">Rs</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{customerdebitlist}</tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default Balance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Table, Button } from \"reactstrap\";\r\nimport base_url from \"./api/bootapi\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nconst CashBook = () => {\r\n  useEffect(() => {\r\n    document.title = \"Ledger\";\r\n  }, []);\r\n\r\n  const data = {\r\n    id: 1,\r\n    firstName: \"RATAN MAJUR\",\r\n    lastName: null,\r\n    transactionEffectiveDate: null,\r\n    totalAmountPending: 0,\r\n    description: null,\r\n    creditAmountReceived: 0,\r\n    debitAmountReceived: 0,\r\n    receiptLink: null,\r\n    paymentLink: null,\r\n    fromDate: \"2021-04-01\",\r\n    toDate: \"2022-03-31\",\r\n  };\r\n\r\n  const [dates, setDates] = useState([]);\r\n  const [dateWiseBalance, setDateWiseBalance] = useState([]);\r\n  const [datewise, setDatewise] = useState(data);\r\n  const [customer, setCustomer] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  const getAllCustomers = () => {\r\n    axios.get(`${base_url}/customer`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        if (response.data === []) {\r\n          toast.success(\"customer has been loaded\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        }\r\n        setCustomer(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllCustomers();\r\n  }, []);\r\n\r\n  const datewiseCustomers = (data) => {\r\n    if (data.fromDate > data.toDate) {\r\n      toast.error(\"From Date Should Be Bigger\", {\r\n        position: \"bottom-center\",\r\n      });\r\n    } else {\r\n      axios.put(`${base_url}/customer/datewise`, data).then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          if (response.data.length === 0) {\r\n            toast.error(\"No Record Found\", {\r\n              position: \"bottom-center\",\r\n            });\r\n          }\r\n          setDates(response.data);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n          toast.error(\"something went wrong\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const EndingDateWiseBalance = (data) => {\r\n    axios.put(`${base_url}/customer/endingDateWiseBalance`, data).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setDateWiseBalance(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const datelist = dates\r\n    .filter((val) => {\r\n      if (val.creditAmountReceived !== 0) {\r\n        return val;\r\n      }\r\n    })\r\n    .map((customer) => {\r\n      return (\r\n        <tr key={customer.id}>\r\n          <td>{customer.transactionEffectiveDate}</td>\r\n          <td style={{ whiteSpace: \"nowrap\" }}>{customer.firstName}</td>\r\n          <td>{customer.creditAmountReceived}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  const datedebitlist = dates\r\n    .filter((val) => {\r\n      if (val.debitAmountReceived !== 0) {\r\n        return val;\r\n      }\r\n    })\r\n    .map((customer) => {\r\n      return (\r\n        <tr key={customer.id}>\r\n          <td>{customer.transactionEffectiveDate}</td>\r\n          <td style={{ whiteSpace: \"nowrap\" }}>{customer.firstName}</td>\r\n          <td>{customer.debitAmountReceived}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  const handleForm = (e) => {\r\n    console.log(datewise);\r\n    datewiseCustomers(datewise);\r\n    EndingDateWiseBalance(datewise);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <br></br>\r\n      <br></br>\r\n      <div>\r\n        <div style={{ height: 5 }}>\r\n          <Autocomplete\r\n            inputValue={inputValue}\r\n            onInputChange={(event, newInputValue) => {\r\n              setInputValue(newInputValue);\r\n              setDatewise({ ...datewise, firstName: newInputValue });\r\n            }}\r\n            id=\"controllable-states-demo\"\r\n            options={customer}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 250 }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Search Name\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <form onSubmit={handleForm} class=\"form-inline\">\r\n          <label for=\"fromDate\" style={{ marginLeft: 275 }}>\r\n            From:\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            defaultValue={datewise.fromDate}\r\n            id=\"fromDate\"\r\n            style={{ marginLeft: 5 }}\r\n            onChange={(e) => {\r\n              setDatewise({ ...datewise, fromDate: e.target.value });\r\n            }}\r\n          />\r\n          <label for=\"todayDate\" style={{ marginLeft: 40 }}>\r\n            To:\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            defaultValue={datewise.toDate}\r\n            id=\"todayDate\"\r\n            style={{ marginLeft: 5 }}\r\n            onChange={(e) => {\r\n              setDatewise({ ...datewise, toDate: e.target.value });\r\n            }}\r\n          />\r\n          <Container>\r\n            <Button type=\"submit\" color=\"success\">\r\n              Search\r\n            </Button>\r\n          </Container>\r\n        </form>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div>\r\n        <label for=\"endingBalance\">Ending Balance:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"endingBalance\"\r\n          defaultValue={dateWiseBalance.endingBalance}\r\n          readOnly=\"true\"\r\n          readOnly=\"true\"\r\n          style={{ marginLeft: 5 }}\r\n        />\r\n      </div>\r\n      <br />\r\n\r\n      <Row>\r\n        <Col md={6}>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n              <tr>\r\n                <th width=\"15%\">Date</th>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"15%\">Rs</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{datelist}</tbody>\r\n          </Table>\r\n        </Col>\r\n        <Col md={6}>\r\n          <Table className=\"mt-4 offset-2\">\r\n            <thead>\r\n              <tr>\r\n                <th width=\"15%\">Date</th>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"15%\">Rs</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{datedebitlist}</tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default CashBook;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, FormGroup, Input } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport base_url from \"./api/bootapi\";\r\nimport { toast } from \"react-toastify\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport \"./UpdateSingleEntry.css\";\r\n\r\nconst UpdateSingleEntry = (props) => {\r\n  useEffect(() => {\r\n    document.title = \"Update Entry\";\r\n  }, []);\r\n\r\n  const [entry, setEntry] = useState(0);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [person, setperson] = useState([]);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [customer, setCustomer] = useState([]);\r\n  const [isChanged, setIsChanged] = useState(false);\r\n\r\n  const getAllCustomers = () => {\r\n    axios.get(`${base_url}/customer`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        if (response.data === []) {\r\n          toast.success(\"customer has been loaded\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        }\r\n        setCustomer(response.data);\r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllCustomers();\r\n    document.title = \"Cash Receipt\";\r\n  }, []);\r\n\r\n  const getCustomerDetail = (entry) => {\r\n    axios.get(`${base_url}/customer/entry/${entry.id}`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        if (response.data === \"\") {\r\n          setIsClicked(false);\r\n          toast.success(\"No Voucher found\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        } else {\r\n          setIsClicked(true);\r\n          setperson(response.data);\r\n        }\r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const postDatatoServer = (data) => {\r\n    axios.put(`${base_url}/customer/updateEntry`, data).then(\r\n      (response) => {\r\n        console.log(response);\r\n        document.getElementById(\"totalAmountPending\").value =\r\n          response.data.amountPendingEntry;\r\n        setIsClicked(false);\r\n        toast.success(\"Entry has been added successfully\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        console.log(\"error\");\r\n      }\r\n    );\r\n  };\r\n\r\n  const callForm = (e) => {\r\n    console.log(person);\r\n    postDatatoServer(person);\r\n    e.target.reset();\r\n    document.getElementById(\"controllable-states-demo\").focus();\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleForm = (e) => {\r\n    console.log(entry);\r\n    getCustomerDetail(entry);\r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isClicked && (\r\n        <Form onSubmit={handleForm}>\r\n          <br></br>\r\n\r\n          <FormGroup>\r\n            <label for=\"entry id\" style={{ width: 300 }}>\r\n              Enter Voucher Number\r\n            </label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"entry id\"\r\n              id=\"entry id\"\r\n              maxlength=\"110\"\r\n              onChange={(e) => {\r\n                setEntry({ ...entry, id: e.target.value });\r\n              }}\r\n              style={{ width: 300 }}\r\n            />\r\n          </FormGroup>\r\n          <br></br>\r\n\r\n          <Container>\r\n            <Button type=\"submit\" color=\"success\">\r\n              Find Entry\r\n            </Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button type=\"reset\" color=\"warning\">\r\n              Clear\r\n            </Button>\r\n          </Container>\r\n        </Form>\r\n      )}\r\n\r\n      <br></br>\r\n\r\n      {isClicked && (\r\n        <div>\r\n          <div class=\"onerow\">\r\n            <label for=\"firstName\" style={{ width: 300 }}>\r\n              Description\r\n            </label>\r\n            <Input\r\n              type=\"text\"\r\n              defaultValue={person.firstName}\r\n              readOnly=\"true\"\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              maxlength=\"110\"\r\n              onChange={(e) => {\r\n                setperson({ ...person, description: e.target.value });\r\n              }}\r\n              style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <div class=\"onerow\">\r\n            <Autocomplete\r\n              inputValue={inputValue}\r\n              onInputChange={(event, newInputValue) => {\r\n                setInputValue(newInputValue);\r\n                setperson({ ...person, firstName: newInputValue });\r\n              }}\r\n              id=\"controllable-states-demo\"\r\n              options={customer}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{ width: 220, marginLeft: 25 }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Search Name\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          <Form onSubmit={callForm}>\r\n            <FormGroup></FormGroup>\r\n            <br></br>\r\n            <FormGroup>\r\n              <label for=\"description\" style={{ width: 300 }}>\r\n                Description\r\n              </label>\r\n              <Input\r\n                type=\"textarea\"\r\n                placeholder=\"Enter Description\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                maxlength=\"110\"\r\n                onChange={(e) => {\r\n                  setperson({ ...person, description: e.target.value });\r\n                }}\r\n                style={{ width: 300 }}\r\n              />\r\n            </FormGroup>\r\n            <br></br>\r\n\r\n            <FormGroup>\r\n              <label for=\"totalAmountPending\" style={{ width: 300 }}>\r\n                Total Amount Pending\r\n              </label>\r\n              <Input\r\n                type=\"text\"\r\n                defaultValue={person.totalAmountPending}\r\n                readOnly=\"totalAmountPending\"\r\n                id=\"totalAmountPending\"\r\n                style={{ width: 300 }}\r\n              />\r\n            </FormGroup>\r\n            <br></br>\r\n\r\n            <FormGroup>\r\n              <label for=\"creditAmountReceived\" style={{ width: 300 }}>\r\n                {props.match.params.boolean == \"false\"\r\n                  ? \"Credit Amount\"\r\n                  : \"Debit Amount\"}\r\n              </label>\r\n              <Input\r\n                placeholder=\"Enter Credit Amount\"\r\n                defaultValue={\r\n                  props.match.params.boolean == \"false\"\r\n                    ? person.creditAmountReceived\r\n                    : person.debitAmountReceived\r\n                }\r\n                name=\"creditAmountReceived\"\r\n                id=\"creditAmountReceived\"\r\n                required\r\n                onChange={(e) => {\r\n                  {\r\n                    props.match.params.boolean == \"false\"\r\n                      ? setperson({\r\n                          ...person,\r\n                          creditAmountReceived: e.target.value,\r\n                        })\r\n                      : setperson({\r\n                          ...person,\r\n                          debitAmountReceived: e.target.value,\r\n                        });\r\n                  }\r\n                }}\r\n                style={{ width: 300 }}\r\n              />\r\n            </FormGroup>\r\n            <br></br>\r\n\r\n            <FormGroup>\r\n              <label for=\"transactionEffectiveDate\" style={{ width: 300 }}>\r\n                Transaction Date\r\n              </label>\r\n              <Input\r\n                type=\"date\"\r\n                placeholder=\"Enter Date\"\r\n                defaultValue={person.transactionEffectiveDate}\r\n                name=\"transactionEffectiveDate\"\r\n                id=\"transactionEffectiveDate\"\r\n                required\r\n                onChange={(e) => {\r\n                  setperson({\r\n                    ...person,\r\n                    transactionEffectiveDate: e.target.value,\r\n                  });\r\n                }}\r\n                style={{ width: 300 }}\r\n              />\r\n            </FormGroup>\r\n\r\n            <Container>\r\n              <Button type=\"submit\" color=\"success\" id=\"add\">\r\n                Add Entry\r\n              </Button>\r\n              &nbsp;&nbsp;&nbsp;\r\n              <Button type=\"reset\" color=\"warning\">\r\n                Clear\r\n              </Button>\r\n            </Container>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default UpdateSingleEntry;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, FormGroup, Input } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport base_url from \"./api/bootapi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst Receipt = (props) => {\r\n  const [customer, setCustomer] = useState([]);\r\n  const [person, setperson] = useState([]);\r\n  let data = null;\r\n  let input = document.getElementById(\"description\");\r\n  let inputs = document.getElementById(\"add\");\r\n\r\n  // for getting all customer list for the dropdown\r\n  const getAllCustomers = () => {\r\n    axios.get(`${base_url}/customer`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        if (response.data === []) {\r\n          toast.success(\"customer has been loaded\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        }\r\n        setCustomer(response.data);\r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const getCustomerDetail = (inputValue) => {\r\n    if (inputValue == \"\") {\r\n      document.getElementById(\"totalAmountPending\").value = 0;\r\n    } else {\r\n      axios.get(`${base_url}/customer/${inputValue}`).then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          data = response.data;\r\n          setperson(response.data);\r\n          document.getElementById(\"totalAmountPending\").value =\r\n            data.totalAmountPending > 0\r\n              ? data.totalAmountPending + \" DR\"\r\n              : Math.abs(data.totalAmountPending) + \" CR\";\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllCustomers();\r\n    document.title = \"Cash Receipt\";\r\n  }, []);\r\n\r\n  //form handler\r\n  const handleForm = (e) => {\r\n    console.log(person);\r\n    postDatatoServer(person);\r\n    e.target.reset();\r\n    document.getElementById(\"controllable-states-demo\").focus();\r\n    e.preventDefault();\r\n  };\r\n\r\n  //creating function t post data to server\r\n  const postDatatoServer = (customerData) => {\r\n    axios.put(`${base_url}/customer/`, customerData).then(\r\n      (response) => {\r\n        console.log(response);\r\n        data = response.data;\r\n        setperson({ ...person, totalAmountPending: data.totalAmountPending });\r\n        document.getElementById(\"totalAmountPending\").value =\r\n          person.totalAmountPending > 0\r\n            ? data.totalAmountPending + \" DR\"\r\n            : Math.abs(data.totalAmountPending) + \" CR\";\r\n        toast.success(\"Entry has been added successfully\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        console.log(\"error\");\r\n      }\r\n    );\r\n  };\r\n\r\n  if (input != null && inputs != null) {\r\n    input.addEventListener(\"keydown\", function (event) {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        document.getElementById(\"creditAmountReceived\").focus();\r\n      }\r\n    });\r\n    inputs.addEventListener(\"keydown\", function (event) {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        document.getElementById(\"description\").focus();\r\n      }\r\n    });\r\n  }\r\n  function custom(event) {\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n      document.getElementById(\"description\").focus();\r\n    }\r\n  }\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center\">Add CashReceipt</h1>\r\n      <br></br>\r\n\r\n      <div style={{ height: 5 }}>\r\n        <Autocomplete\r\n          inputValue={inputValue}\r\n          onInputChange={(event, newInputValue) => {\r\n            setInputValue(newInputValue);\r\n            getCustomerDetail(newInputValue);\r\n            //   setDatewise({...datewise,firstName:newInputValue});\r\n          }}\r\n          id=\"controllable-states-demo\"\r\n          options={customer}\r\n          getOptionLabel={(option) => option.name}\r\n          style={{ width: 300 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Search Name\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n      <br></br>\r\n      <Form onSubmit={handleForm}>\r\n        <br></br>\r\n\r\n        <FormGroup>\r\n          <label for=\"description\" style={{ width: 300 }}>\r\n            Description\r\n          </label>\r\n          <Input\r\n            type=\"textarea\"\r\n            placeholder=\"Enter Description\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            maxlength=\"110\"\r\n            onChange={(e) => {\r\n              setperson({ ...person, description: e.target.value });\r\n            }}\r\n            style={{ width: 300 }}\r\n          />\r\n        </FormGroup>\r\n        <br></br>\r\n\r\n        <FormGroup>\r\n          <label for=\"totalAmountPending\" style={{ width: 300 }}>\r\n            Total Amount Pending\r\n          </label>\r\n          <Input\r\n            type=\"text\"\r\n            defaultValue={inputValue == \"\" ? 0 : person.totalAmountPending}\r\n            readOnly=\"totalAmountPending\"\r\n            id=\"totalAmountPending\"\r\n            style={{ width: 300 }}\r\n          />\r\n        </FormGroup>\r\n        <br></br>\r\n\r\n        <FormGroup>\r\n          {props.match.params.Credit == \"true\" ? (\r\n            <div>\r\n              <label style={{ width: 300 }}>Credit Amount</label>\r\n              <Input\r\n                placeholder=\"Enter Credit Amount\"\r\n                name=\"creditAmountReceived\"\r\n                id=\"creditAmountReceived\"\r\n                required\r\n                onChange={(e) => {\r\n                  setperson({\r\n                    ...person,\r\n                    creditAmountReceived: e.target.value,\r\n                  });\r\n                }}\r\n                style={{ width: 300 }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <label for=\"debitAmountReceived\" style={{ width: 300 }}>\r\n                Debit Amount\r\n              </label>\r\n              <Input\r\n                placeholder=\"Enter Debit Amount\"\r\n                name=\"debitAmountReceived\"\r\n                id=\"debitAmountReceived\"\r\n                required\r\n                onChange={(e) => {\r\n                  setperson({ ...person, debitAmountReceived: e.target.value });\r\n                }}\r\n                style={{ width: 300 }}\r\n              />\r\n            </div>\r\n          )}\r\n        </FormGroup>\r\n        <br></br>\r\n\r\n        <FormGroup>\r\n          <label for=\"transactionEffectiveDate\" style={{ width: 300 }}>\r\n            Transaction Date\r\n          </label>\r\n          <Input\r\n            type=\"date\"\r\n            placeholder=\"Enter Date\"\r\n            defaultValue={person.transactionEffectiveDate}\r\n            name=\"transactionEffectiveDate\"\r\n            id=\"transactionEffectiveDate\"\r\n            required\r\n            onChange={(e) => {\r\n              setperson({\r\n                ...person,\r\n                transactionEffectiveDate: e.target.value,\r\n              });\r\n            }}\r\n            style={{ width: 300 }}\r\n          />\r\n        </FormGroup>\r\n\r\n        <Container>\r\n          <Button type=\"submit\" color=\"success\" id=\"add\">\r\n            Add Entry\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Button type=\"reset\" color=\"warning\">\r\n            Clear\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Link to={`/update-entry/${false}`}>\r\n            <Button color=\"success\">Update Entry</Button>\r\n          </Link>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Link to={`/delete-entry/${false}`}>\r\n            <Button color=\"danger\">Delete Entry</Button>\r\n          </Link>\r\n        </Container>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Receipt);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, FormGroup, Input } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport base_url from \"./api/bootapi\";\r\nimport { toast } from \"react-toastify\";\r\nimport Customer from \"./Customer\";\r\n\r\nconst UpdateName = (props) => {\r\n  const [customer, setCustomer] = useState({});\r\n\r\n  useEffect(() => {\r\n    document.title = \"Update Customer\";\r\n  }, []);\r\n  // to fetch current name and display in current name box\r\n  // useEffect (async () =>{\r\n  //     let result =await fetch(`${base_url}/customer/person/${props.match.params.id}`);\r\n  //     result =  await result.json();\r\n  //     setCustomer(result)\r\n  // },[])\r\n\r\n  //form handler\r\n  const handleForm = (e) => {\r\n    console.log(customer);\r\n    postDatatoServer(customer);\r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  //creating function t post data to server\r\n  const postDatatoServer = (data) => {\r\n    axios\r\n      .put(`${base_url}/customer/updateCustomer/${props.match.params.id}`, data)\r\n      .then(\r\n        (response) => {\r\n          console.log(response);\r\n          {\r\n            toast.success(\"Customer has been updated successfully\", {\r\n              position: \"bottom-center\",\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          console.log(\"error\");\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center\">Update Customer</h1>\r\n      <br></br>\r\n      <Form onSubmit={handleForm}>\r\n        <FormGroup>\r\n          <label for=\"firstName\" style={{ width: 300 }}>\r\n            FirstName\r\n          </label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter FirstName\"\r\n            name=\"firstName\"\r\n            id=\"firstName\"\r\n            required\r\n            maxlength=\"45\"\r\n            onChange={(e) => {\r\n              setCustomer({ ...customer, name: e.target.value.toUpperCase() });\r\n            }}\r\n            style={{ width: 300 }}\r\n          />\r\n        </FormGroup>\r\n        <br></br>\r\n        <Container>\r\n          <Button type=\"submit\" color=\"success\">\r\n            Update Customer\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Button type=\"reset\" color=\"warning\">\r\n            Clear\r\n          </Button>\r\n        </Container>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default UpdateName;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Container, Form, FormGroup, Input } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport base_url from \"./api/bootapi\";\r\nimport \"./DeleteEntry.css\";\r\nconst DeleteEntry = (props) => {\r\n  useEffect(() => {\r\n    document.title = \"Delete Entry\";\r\n  }, []);\r\n  const [entry, setEntry] = useState(0);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n\r\n  const deleteCourse = (entry) => {\r\n    axios.delete(`${base_url}/customer/deleteEntry/${entry.id}`).then(\r\n      (response) => {\r\n        toast.success(\"deleted successfully\");\r\n      },\r\n      (error) => {\r\n        toast.error(\"Data Exists\");\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleForm = (e) => {\r\n    console.log(entry);\r\n    deleteCourse(entry);\r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  //****************Password Validation********************** */\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const onChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const validation = () => {\r\n    if (\"rahil\" === value) {\r\n      setIsVerified(true);\r\n    } else {\r\n      alert(\"sorry Try Again\");\r\n    }\r\n  };\r\n\r\n  //****************************************************************** */\r\n\r\n  return (\r\n    <div id=\"body\">\r\n      {!isVerified ? (\r\n        <div id=\"center\">\r\n          <Form name=\"form1\">\r\n            <label htmlFor=\"password\">Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"text1\"\r\n              onChange={onChange}\r\n              autoFocus\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              id=\"submit\"\r\n              value=\"submit\"\r\n              onClick={validation}\r\n            >\r\n              Validate\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      ) : (\r\n        <Form onSubmit={handleForm}>\r\n          <br></br>\r\n          <FormGroup>\r\n            <label for=\"entry id\" style={{ width: 300 }}>\r\n              Enter Voucher Number\r\n            </label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"entry id\"\r\n              id=\"entry id\"\r\n              maxlength=\"110\"\r\n              onChange={(e) => {\r\n                setEntry({ ...entry, id: e.target.value });\r\n              }}\r\n              autoFocus\r\n              style={{ width: 300 }}\r\n            />\r\n          </FormGroup>\r\n          <br></br>\r\n\r\n          <Container>\r\n            <Button type=\"submit\" color=\"success\">\r\n              Delete Entry\r\n            </Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button type=\"reset\" color=\"warning\">\r\n              Clear\r\n            </Button>\r\n          </Container>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default DeleteEntry;\r\n","import {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  PDFViewer,\n} from \"@react-pdf/renderer\";\nimport ReactToPrint from \"react-to-print\";\nimport Home from \"./Home\";\nimport ViewCustomer from \"./ViewCustomer\";\nimport React, { useRef } from \"react\";\nimport * as htmlToImage from \"html-to-image\";\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from \"html-to-image\";\nimport { jsPDF } from \"jspdf\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: \"#d11fb6\",\n    color: \"white\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n  },\n  viewer: {\n    width: window.innerWidth, //the pdf viewer will take up all of the width and height\n    height: window.innerHeight,\n  },\n});\n\n// Create Document Component\nconst MyDocument = (props) => {\n  const componentRef = useRef();\n  let name = props.match.params.firstName;\n\n  //    let generatePDF = () => {\n  //         let doc = new jsPDF('p', 'pt');\n\n  //         doc.text(20, 20, 'This is the first title.')\n  //         doc.addFont('helvetica', 'normal')\n  //         doc.text(20, 60, 'This is the second title.')\n  //         doc.text(20, 100, 'This is the thrid title.')\n\n  //         doc.save('demo.pdf')\n  //   }\n\n  return (\n    <div>\n      <ViewCustomer firstName={name} ref={componentRef} />\n      <ReactToPrint\n        content={() => componentRef.current}\n        trigger={() => <button>Print to PDF!</button>}\n      />\n\n      {/* <div>\n            <button onClick={generatePDF} type=\"primary\">Download PDF</button> \n         </div> */}\n    </div>\n  );\n};\nexport default MyDocument;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { ToastContainer } from \"react-toastify\";\nimport AllCustomers from \"./AllCustomers\";\nimport AddCustomer from \"./AddCustomer\";\nimport Menus from \"./Menus\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ViewCustomer from \"./ViewCustomer\";\nimport AddEntry from \"./AddEntry\";\nimport CashBook from \"./CashBook\";\nimport Ledger from \"./Ledger\";\nimport UpdateSingleEntry from \"./UpdateSingleEntry\";\nimport Receipt from \"./Receipt\";\nimport \"react-app-polyfill/stable\";\nimport UpdateName from \"./UpdateName\";\nimport DeleteEntry from \"./DeleteEntry\";\nimport PDF from \"./PDF\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <ToastContainer />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1.0\"\n        ></meta>\n        <Container>\n          <Header />\n\n          <Row>\n            <Col md={4}>\n              <Menus />\n            </Col>\n            <Col md={8}>\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/add-customer\" component={AddCustomer} exact />\n              <Route path=\"/view-customers\" component={AllCustomers} exact />\n              <Route path=\"/pdf/:firstName\" component={PDF} exact />\n              <Route\n                path=\"/update-customer/:firstName\"\n                component={AddEntry}\n                exact\n              />\n              <Route path=\"/update-name/:id\" component={UpdateName} exact />\n              <Route path=\"/Balance\" component={CashBook} exact />\n              <Route\n                path=\"/Balance-CashReceipt/:Credit\"\n                component={Receipt}\n                exact\n              />\n              <Route\n                path=\"/Balance-CashPayment/:Debit\"\n                component={Receipt}\n                exact\n              />\n              <Route path=\"/Balance-CashBook\" component={Ledger} exact />\n              <Route\n                path=\"/update-entry/:boolean\"\n                component={UpdateSingleEntry}\n                exact\n              />\n              <Route\n                path=\"/delete-entry/:boolean\"\n                component={DeleteEntry}\n                exact\n              />\n              {/* <Route path=\"/pdf/:firstName\" component={PDF} exact/> */}\n            </Col>\n          </Row>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}