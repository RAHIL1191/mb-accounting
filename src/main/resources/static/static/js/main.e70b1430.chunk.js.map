{"version":3,"sources":["Header.js","Home.js","api/bootapi.js","Customer.js","AllCustomers.js","AddCustomer.js","Menus.js","ViewCustomer.js","AddEntry.js","CashBook.js","SearchBar.js","Receipt.js","Ledger.js","CashReceipt.js","UpdateSingleEntry.js","Payment.js","UpdateName.js","DeleteEntry.js","App.js","reportWebVitals.js","index.js"],"names":["Header","name","Card","className","CardBody","Home","useEffect","document","title","Jumbotron","Container","to","Button","color","base_url","Customer","course","update","CardSubtitle","onClick","id","axios","delete","then","response","toast","success","error","AllCustomers","get","console","log","data","position","setCustomers","useState","customers","searchTerm","setSearchTerm","updateCustomer","filter","c","pagenumber","setPageNumber","pageVisited","pageCount","Math","ceil","length","displayUsers","slice","map","item","displaySingleUser","val","toUpperCase","includes","type","placeholder","onChange","e","target","value","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","AddCustomer","customer","setCustomer","postDatatoServer","post","Form","onSubmit","reset","preventDefault","FormGroup","for","style","width","Input","required","maxlength","Menus","ListGroup","tag","horizontal","withRouter","props","warn","match","params","firstName","a","fetch","result","json","setperson","person","customerlist","transactionEffectiveDate","creditAmountReceived","debitAmountReceived","totalAmountPending","abs","fluid","align","Table","rowsPer","lastName","put","getElementById","input","creditInput","addEventListener","event","keyCode","focus","inputDebit","defaultValue","readOnly","autoFocus","description","Balance","balance","setBalance","datewise","setDatewise","fromDate","todayDate","whiteSpace","customerdebitlist","toDate","datewiseCustomers","EndingDateWiseBalance","class","endingBalance","marginLeft","openingBalance","Row","Col","md","SearchBar","handleChange","filteredData","setFilteredData","searchWord","newFilter","key","href","receiptLink","inputs","React","inputValue","setInputValue","height","Autocomplete","onInputChange","newInputValue","getCustomerDetail","options","getOptionLabel","option","renderInput","TextField","label","variant","size","CashBook","dates","setDates","dateWiseBalance","setDateWiseBalance","datelist","datedebitlist","UpdateSingleEntry","entry","setEntry","isClicked","setIsClicked","amountPendingEntry","boolean","setValue","newValue","UpdateName","DeleteEntry","deleteCourse","App","path","component","exact","ViewCustomer","AddEntry","Receipt","Payment","Ledger","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.e70b1430.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { CardBody,Card } from \"reactstrap\";\r\n\r\n\r\nfunction Header({name}) {\r\n    return(\r\n        <div>\r\n            <Card className=\"bg-warning my-2\">\r\n                <CardBody>\r\n                <h1 className=\"text-center my-2\">Welcome to Mulchand Badridas</h1>\r\n                </CardBody>\r\n            </Card>\r\n       \r\n        </div>\r\n    );\r\n}export default Header;","import React,{useEffect} from 'react';\r\nimport { Jumbotron, Button, Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Home = () => {\r\n\r\n  useEffect (() =>{\r\n    document.title =\"Home\";\r\n\r\n},[]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron className=\"text-center\" >\r\n        <h1> Welcome to Customer Details</h1>\r\n\r\n        <Container>\r\n        <Link to={`/add-customer`}><Button color=\"success\">Start Using</Button></Link>\r\n        </Container>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","const base_url= \"https://mb-accounting.herokuapp.com\";\r\n//\"http://localhost:8080\"\r\nexport default base_url;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Card,CardBody, CardSubtitle, Button, Container} from 'reactstrap';\r\nimport base_url from \"./api/bootapi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n  const Customer = ({ course, update})=>{\r\n\r\n    \r\n    const deleteCourse = (id) => {\r\n        axios.delete(`${base_url}/customer/${id}`).then(\r\n            (response)=>{\r\n                toast.success(\"deleted successfully\");\r\n                update(id);\r\n            },\r\n            (error)=>{\r\n                toast.error(\"Data Exists\");\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Card className=\"text-center\">\r\n            <CardBody>\r\n                <CardSubtitle className=\"font-weight-bold\">{course.name}</CardSubtitle>\r\n                <Container className=\"text-center\">\r\n                   <Link to={`/update-customer/${course.name}`}><Button color=\"warning\" >Add Entry</Button></Link>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                   <Link to={`/view-customer/${course.name}`}><Button color=\"success\">View</Button></Link>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button color=\"danger\" onClick={() => { deleteCourse(course.id); }}>Delete</Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Link to={`/update-name/${course.id}`}><Button color=\"success\">Update</Button></Link>\r\n                </Container>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n  }\r\n  export default Customer;","import React, { useState, useEffect } from 'react'\r\nimport Customer from './Customer'\r\nimport base_url from './api/bootapi';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"./AllCustomers.css\"\r\n\r\nconst AllCustomers = () => {\r\n\r\n    useEffect(() => {\r\n        document.title = \"All Customers\";\r\n\r\n    }, []);\r\n\r\n    //function to call server\r\n    const getAllCustomers = () => {\r\n\r\n        axios.get(`${base_url}/customer`).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                if (response.data === []) {\r\n                    toast.success(\"customer has been loaded\", {\r\n                        position: \"bottom-center\",\r\n                    });\r\n                }\r\n                setCustomers(response.data);\r\n            },\r\n\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"something went wrong\", {\r\n                    position: \"bottom-center\",\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllCustomers();\r\n\r\n    }, []);\r\n\r\n    const [customers, setCustomers] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n   \r\n   \r\n    \r\n    const updateCustomer = (id) => {\r\n        setCustomers(customers.filter((c) => c.id !== id));\r\n\r\n    }\r\n\r\n//*************** */ for Pagination\r\n    const [pagenumber, setPageNumber] = useState(0)\r\n    const usersPage = 5\r\n    const pageVisited = pagenumber * usersPage\r\n    const pageCount = Math.ceil(customers.length/usersPage)\r\n    const changePage=({selected})=>{\r\n        setPageNumber(selected)\r\n    }\r\n    const displayUsers = customers.slice(pageVisited, pageVisited + usersPage).map((item) => {\r\n        return (\r\n            <Customer key={item.id} course={item} update={updateCustomer} />\r\n\r\n        );\r\n    })\r\n\r\n    const displaySingleUser = customers.filter((val) => {\r\n        \r\n        if (val.name.toUpperCase().includes(searchTerm.toUpperCase())) {\r\n            return val\r\n        }\r\n    }).map((item) => {\r\n        return (\r\n            <Customer key={item.id} course={item} update={updateCustomer} />\r\n\r\n        );\r\n    })\r\n // ************************************************\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1 className=\"text-center\">AllCustomers</h1>\r\n            <input type=\"text\" placeholder=\"Search...\" onChange={e => { setSearchTerm(e.target.value) }} />\r\n            {searchTerm === \"\"?  displayUsers:displaySingleUser}\r\n          \r\n            <br/>\r\n            <ReactPaginate\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            pageCount={pageCount} \r\n            onPageChange={changePage}\r\n            containerClassName={\"paginationBttns\"}\r\n            previousLinkClassName={\"previousBttn\"}\r\n            nextLinkClassName={\"nextBttn\"}\r\n            disabledClassName={\"paginationDisabled\"}\r\n            activeClassName={\"paginationActive\"}\r\n            />\r\n            </div>\r\n    );\r\n\r\n\r\n};\r\nexport default AllCustomers;","import React,{useEffect, useState} from 'react'\r\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport base_url from './api/bootapi';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AddCustomer =() => {\r\n\r\nuseEffect (() =>{\r\n        document.title =\"Add Customer\";},[]);\r\n\r\n    const[customer,setCustomer] = useState({});\r\n   \r\n    //form handler\r\n    const handleForm=(e)=>{\r\n        console.log(customer);\r\n        postDatatoServer(customer);\r\n        e.target.reset()\r\n       e.preventDefault();\r\n    }\r\n\r\n    //creating function t post data to server\r\n    const postDatatoServer= (data) =>{\r\n        axios.post(`${base_url}/customer`,data).then(\r\n            (response)=>{\r\n                console.log(response);\r\n                if(response.data === \"Customer Already Exists\" ){\r\n                    toast.error(\"Customer Already Exists\",{\r\n                        position:\"bottom-center\",\r\n                    })\r\n                }else{  toast.success(\"Customer has been added successfully\",{\r\n                    position:\"bottom-center\",\r\n                });}\r\n                \r\n              \r\n            },(error)=>{\r\n                console.log(error);\r\n                console.log(\"error\");\r\n            }\r\n        )\r\n    }\r\n\r\n   \r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center\">Add Customer</h1>\r\n            <br></br>\r\n\r\n            <Form onSubmit={handleForm}>\r\n                <FormGroup>\r\n                    <label for=\"firstName\" style={{ width:300 }}>FirstName</label>\r\n                    <Input type=\"text\" placeholder=\"Enter FirstName\"  name=\"firstName\" id=\"firstName\" required maxlength=\"45\"  onChange={(e) => {\r\n                        setCustomer({...customer, name: e.target.value.toUpperCase() });\r\n                    }} style={{ width:300 }}/>\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n               \r\n                 <Container>\r\n                     <Button  type=\"submit\" color=\"success\"  >Add Customer</Button>\r\n                     &nbsp;&nbsp;&nbsp;\r\n                     <Button type =\"reset\" color=\"warning\">Clear</Button>\r\n                 </Container>\r\n            </Form>\r\n            </div>\r\n    );\r\n};\r\nexport default AddCustomer;","import React from 'react'\r\nimport { ListGroup} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Menus=() =>{\r\n    return(\r\n        <ListGroup>\r\n            <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"/\">Home</Link>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"/view-customers\">View Customers</Link>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"/add-customer\">Add Customer</Link>\r\n\r\n            <ListGroup horizontal>\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"/Balance-CashReceipt\" >Cash Receipt</Link>\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"/Balance-CashPayment\" >Cash Payment</Link>\r\n            </ListGroup>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"/Balance-CashBook\" >Ledger</Link>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"/Balance\" >CashBook</Link>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"#!\">About</Link>\r\n\r\n            <Link className=\"list-group-item list-group-item-action\"tag=\"a\" to=\"#!\">Contact Us</Link>\r\n        </ListGroup>\r\n    );\r\n};\r\nexport default Menus;","import React, { useState,useEffect } from 'react'\r\nimport { Button, Container,Table } from 'reactstrap'\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"./AllCustomers.css\"\r\nimport { TablePagination } from '@material-ui/core';\r\nimport base_url from './api/bootapi';\r\nimport { Link } from 'react-router-dom';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nfunction ViewCustomer (props) {\r\n\r\n  console.warn(\"props\",props.match.params.firstName)\r\n  const[isPositive,setIsPositive] = useState(false);\r\n\r\n  useEffect (async () =>{ \r\n    let result =await fetch(`${base_url}/customer/details/${props.match.params.firstName}`);\r\n    result =  await result.json();\r\n    setperson(result)\r\n   \r\n},[])\r\n\r\nconst[person,setperson] = useState([]);\r\n\r\n    \r\n\r\n    //*************** */ for Pagination\r\n    const [pagenumber, setPageNumber] = useState(0)\r\n    const usersPage = 10\r\n    const pageVisited = pagenumber * usersPage\r\n    const pageCount = Math.ceil(person.length/usersPage)\r\n    const changePage=({selected})=>{\r\n        setPageNumber(selected)\r\n    }\r\n    const customerlist = person.slice(pageVisited, pageVisited + usersPage).map(customer => {\r\n        \r\n      return <tr key={customer.id}>\r\n         <td>{customer.id}</td>\r\n        <td>{customer.firstName}</td>\r\n        <td>{customer.transactionEffectiveDate}</td>\r\n        <td>{customer.creditAmountReceived}</td>\r\n        <td>{customer.debitAmountReceived}</td>\r\n        <td>{customer.totalAmountPending > 0 ? customer.totalAmountPending + \" DR\" : Math.abs(customer.totalAmountPending) + \" CR\" }</td>\r\n      </tr>\r\n    });\r\n // ************************************************\r\n   \r\n    return(\r\n     <div>\r\n       \r\n        <Container fluid>\r\n        <h3 align=\"center\">Customer Transactions</h3>\r\n        <br></br>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n            <tr>\r\n              <th width=\"10%\">Voucher Number</th>\r\n              <th width=\"10%\">FirstName</th>\r\n              <th width=\"10%\">Received Date</th>\r\n              <th width=\"10%\">Credit Amount</th>\r\n              <th width=\"10%\">Debit Amount</th>\r\n              <th width=\"10%\">AmountPending</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {customerlist}\r\n            <br />\r\n           \r\n            </tbody>\r\n          </Table>\r\n          <ReactPaginate\r\n            rowsPer\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            pageCount={pageCount} \r\n            onPageChange={changePage}\r\n            containerClassName={\"paginationBttns\"}\r\n            previousLinkClassName={\"previousBttn\"}\r\n            nextLinkClassName={\"nextBttn\"}\r\n            disabledClassName={\"paginationDisabled\"}\r\n            activeClassName={\"paginationActive\"}\r\n            />\r\n        </Container>\r\n        \r\n     </div>\r\n    \r\n);\r\n   \r\n\r\n};\r\nexport default  withRouter(ViewCustomer);","import React,{useEffect, useState} from 'react'\r\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport base_url from './api/bootapi';\r\nimport { toast } from 'react-toastify';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst UpdateCustomer =(props) => {\r\n\r\n    console.warn(\"props\",props.match.params.firstName,props.match.params.lastName)\r\n\r\n    \r\n    useEffect (async () =>{ \r\n        let result =await fetch(`${base_url}/customer/${props.match.params.firstName}`);\r\n        result =  await result.json();\r\n        setperson(result)\r\n    },[])\r\n    const[customer,setCustomer] = useState([]);\r\n\r\n    const[person,setperson] = useState([]);\r\n    \r\n\r\n   \r\n    //form handler\r\n    const handleForm=(e)=>{\r\n        console.log(person);\r\n        postDatatoServer(person);\r\n        \r\n       \r\n        e.target.reset()\r\n       \r\n        e.preventDefault();\r\n    }\r\n\r\n    //creating function t post data to server\r\n    const postDatatoServer= (data) =>{\r\n        if(data.creditAmountReceived === 0 && data.debitAmountReceived === 0){\r\n            toast.error(\"Please enter credit or debit Amount\",{\r\n                position:\"bottom-center\",\r\n            });\r\n        }else{\r\n        axios.put(`${base_url}/customer/`,data).then(\r\n            (response)=>{\r\n                console.log(response);\r\n                setperson({...person, totalAmountPending: response.data.totalAmountPending });\r\n                document.getElementById(\"totalAmountPending\").value= response.data.totalAmountPending\r\n                  toast.success(\"Entry has been added successfully\",{\r\n                    position:\"bottom-center\",\r\n                });\r\n                \r\n              \r\n            },(error)=>{\r\n                console.log(error);\r\n                console.log(\"error\");\r\n            }\r\n        )}\r\n    }\r\n        \r\n//for moving to next input box on pressing enter\r\n\r\n    let input = document.getElementById(\"description\");\r\n    let creditInput = document.getElementById(\"creditAmountReceived\");\r\n    if (input != null && creditInput != null) {\r\n        input.addEventListener(\"keydown\", function (event) {\r\n            if (event.keyCode === 13) {\r\n                event.preventDefault();\r\n                document.getElementById(\"creditAmountReceived\").focus()\r\n            }\r\n        });\r\n        creditInput.addEventListener(\"keydown\", function (event) {\r\n            if (event.keyCode === 13) {\r\n                document.getElementById(\"debitAmountReceived\").focus();\r\n            }\r\n        })\r\n    }\r\n//for moving  back  to previous input box on pressing escape\r\n    let inputDebit = document.getElementById(\"debitAmountReceived\");\r\n    let inputCredit = document.getElementById(\"creditAmountReceived\");\r\n    if (input != null && creditInput != null) {\r\n        inputDebit.addEventListener(\"keydown\", function (event) {\r\n            if (event.keyCode === 27) {\r\n                event.preventDefault();\r\n                document.getElementById(\"creditAmountReceived\").focus()\r\n            }\r\n        });\r\n        creditInput.addEventListener(\"keydown\", function (event) {\r\n            if (event.keyCode === 27) {\r\n                document.getElementById(\"description\").focus();\r\n            }\r\n        })\r\n    }\r\n    \r\n     return (\r\n        <div>\r\n             \r\n            <h1 className=\"text-center\">Add Entry</h1>\r\n            <br></br>\r\n           \r\n            <Form onSubmit={handleForm}>\r\n                <FormGroup>\r\n                    <label for=\"firstName\" style={{ width:300 }}>FirstName</label>\r\n                    <Input type=\"text\" defaultValue={person.firstName} readOnly=\"true\" style={{ width:300 }}/>\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n               \r\n                \r\n                 <FormGroup>\r\n                    <label for=\"description\" style={{ width:300 }}>Description</label>\r\n                    <Input type=\"textarea\" placeholder=\"Enter Description\"  name=\"description\" id=\"description\"  autoFocus   maxlength=\"110\"\r\n                     onChange={(e) => {\r\n                        setperson({...person, description: e.target.value });\r\n                    }}  style={{ width:300 }}/>\r\n                 </FormGroup>\r\n                 <br></br>\r\n\r\n                 <FormGroup>\r\n                    <label for=\"totalAmountPending\" style={{ width:300 }}>Total Amount Pending</label>\r\n                    <Input type=\"text\" defaultValue={person.totalAmountPending}   readOnly=\"totalAmountPending\" id=\"totalAmountPending\" \r\n                     style={{ width:300 }}/>\r\n                 </FormGroup>\r\n                 <br></br>\r\n\r\n                 <FormGroup>\r\n                    <label for=\"creditAmountReceived\" style={{ width:300 }}>Credit Amount</label>\r\n                    <Input  placeholder=\"Enter Credit Amount\"  name=\"creditAmountReceived\" id=\"creditAmountReceived\" \r\n                    onChange={(e) => {\r\n                        setperson({...person, creditAmountReceived: e.target.value });\r\n                    }}  style={{ width:300 }}/>\r\n                 </FormGroup>\r\n                 <br></br>\r\n\r\n                 <FormGroup>\r\n                    <label for=\"debitAmountReceived\" style={{ width:300 }}>Debit Amount</label>\r\n                    <Input type=\"number\" placeholder=\"Enter Debit Amount\"  name=\"debitAmountReceived\" id=\"debitAmountReceived\" \r\n                    onChange={(e) => {\r\n                        setperson({...person, debitAmountReceived: e.target.value });\r\n                    }}  style={{ width:300 }}/>\r\n                 </FormGroup>\r\n                 <br></br>\r\n\r\n                 <FormGroup>\r\n                    <label for=\"transactionEffectiveDate\" style={{ width:300 }}>Transaction Date</label>\r\n                    <Input type=\"date\" placeholder=\"Enter Date\" defaultValue={person.transactionEffectiveDate} readOnly=\"true\" name=\"transactionEffectiveDate\" id=\"transactionEffectiveDate\" required\r\n                     style={{ width:300 }}/>\r\n                 </FormGroup>\r\n\r\n                 <Container>\r\n                     <Button  type=\"submit\" color=\"success\" >Add Entry</Button>\r\n                     &nbsp;&nbsp;&nbsp;\r\n                     <Button type =\"reset\" color=\"warning\">Clear</Button>\r\n                 </Container>\r\n            </Form>\r\n            </div>\r\n    );\r\n};\r\nexport default  withRouter(UpdateCustomer);","import React, { useState, useEffect } from 'react'\r\nimport {Row, Col, Container,Table,Button} from \"reactstrap\";\r\nimport base_url from './api/bootapi';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"./AllCustomers.css\"\r\n\r\n\r\nconst Balance = () => {\r\n\r\n  const data = {\r\n    \"id\": 1,\r\n    \"firstName\": \"RATAN MAJUR\",\r\n    \"lastName\": null,\r\n    \"transactionEffectiveDate\": null,\r\n    \"totalAmountPending\": 0,\r\n    \"description\": null,\r\n    \"creditAmountReceived\": 0,\r\n    \"debitAmountReceived\": 0,\r\n    \"receiptLink\": null,\r\n    \"paymentLink\": null,\r\n    \"fromDate\": \"2021-04-01\",\r\n    \"toDate\": \"2022-03-31\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"Cash Book\";\r\n\r\n  }, []);\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [balance, setBalance] = useState([]);\r\n  const[datewise,setDatewise] = useState(data);\r\n  \r\n\r\n const Balance = () => {\r\n    axios.get(`${base_url}/customer/balance`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setCustomers(response.data);\r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  const EndingBalance = () => {\r\n    axios.get(`${base_url}/customer/endingBalance`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setBalance(response.data);\r\n        setDatewise({...datewise,fromDate: response.data.todayDate})\r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    )\r\n  }\r\n// for getting details on selected date\r\n  const datewiseCustomers = (data) => {\r\n    if (data.fromDate > data.toDate) {\r\n      toast.error(\"From Date Should Be Bigger\", {\r\n        position: \"bottom-center\",\r\n      })\r\n    } else {\r\n      axios.put(`${base_url}/customer/datewiseDetails`, data).then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          if (response.data.length === 0) {\r\n            toast.error(\"No Record Found\", {\r\n              position: \"bottom-center\",\r\n            })\r\n          }\r\n          setCustomers(response.data);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n          toast.error(\"something went wrong\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  const EndingDateWiseBalance = (data) => {\r\n    axios.put(`${base_url}/customer/getListFromDate`, data).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setBalance(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n// pagination\r\nconst [pagenumber, setPageNumber] = useState(0)\r\n   \r\nconst usersPage = 9\r\nconst pageVisited = pagenumber * usersPage\r\nconst pageCount = Math.ceil(customers.length/usersPage)\r\nconst changePage=({selected})=>{\r\n    setPageNumber(selected)\r\n}\r\n \r\n\r\n  useEffect(() => {\r\n    Balance();\r\n    EndingBalance();\r\n  }, []);\r\n\r\n  const customerlist = customers.filter((val)=>{\r\n    if (val.creditAmountReceived !== 0) {\r\n    return val\r\n  }\r\n  }).map(customer => {\r\n      return <tr key={customer.id}>\r\n        <td>{customer.id}</td>\r\n      <td>{customer.transactionEffectiveDate}</td>\r\n       <td style={{ whiteSpace: 'nowrap' }}>{customer.firstName}</td>\r\n      <td>{customer.creditAmountReceived}</td>\r\n    </tr>\r\n  });\r\n\r\n  const customerdebitlist = customers.filter((val) => {\r\n    if (val.debitAmountReceived !== 0) {\r\n      return val\r\n    }\r\n  }).map(customer => {\r\n     return <tr key={customer.id}>\r\n        <td>{customer.id}</td>\r\n       <td>{customer.transactionEffectiveDate}</td>\r\n       <td style={{ whiteSpace: 'nowrap' }}>{customer.firstName}</td>\r\n      <td>{customer.debitAmountReceived}</td>\r\n    </tr>\r\n  });\r\n\r\n  const handleForm = (e) => {\r\n    console.log(datewise);\r\n    datewiseCustomers(datewise);\r\n    EndingDateWiseBalance(datewise)\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <br></br>\r\n      <div>\r\n        <form  onSubmit={handleForm} class=\"form-inline\">\r\n          <label for=\"endingBalance\">Ending Balance:</label>\r\n          <input type=\"text\" id=\"endingBalance\" readOnly=\"true\" defaultValue={balance.endingBalance} readOnly=\"true\" style={{ marginLeft: 5 }} />\r\n          <label for=\"openingBalance\" style={{ marginLeft: 25 }}>Opening Balance:</label>\r\n          <input type=\"text\" id=\"openingBalance\" readOnly=\"true\" defaultValue={balance.openingBalance} readOnly=\"true\" style={{ marginLeft: 5 }} />\r\n          <br/> <br/>\r\n          <label for=\"todayDate\" style={{ marginLeft: 75 }}>Date:</label>\r\n          <input type=\"date\" id=\"todayDate\" defaultValue={balance.todayDate} style={{ marginLeft: 5 }} onChange={(e) => {\r\n            setDatewise({ ...datewise, fromDate: e.target.value })\r\n          } }/>\r\n\r\n          <Container  >\r\n            <Button type=\"submit\" color=\"success\" >Search</Button>\r\n          </Container>\r\n        </form>\r\n      </div>\r\n      <br></br>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n              <tr>\r\n              <th width=\"10%\">Voucher No.</th>\r\n              <th width=\"15%\">Date</th>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"15%\">Rs</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {customerlist}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n        <Col md={6} >\r\n          <Table className=\"mt-4 offset-2\">\r\n            <thead>\r\n              <tr>\r\n              <th width=\"10%\">Voucher No.</th>\r\n              <th width=\"15%\">Date</th>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"15%\">Rs</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {customerdebitlist}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n       \r\n       \r\n    </div>\r\n  )\r\n}\r\nexport default Balance;","import React, {useState} from 'react'\r\nimport \"./SearchBar.css\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction SearchBar({placeholder,data, handleChange}){\r\n    \r\n    const[filteredData,setFilteredData]=useState([])\r\n   \r\n    const handleFilter=(e) => {\r\n        const searchWord =e.target.value\r\n        const newFilter = data.filter((value)=>{\r\n            return value.firstName.toUpperCase().includes(searchWord.toUpperCase())\r\n        })\r\n        if (searchWord === \"\"){\r\n             setFilteredData([]);\r\n        }else{\r\n           setFilteredData(newFilter) \r\n        }\r\n     }\r\n     let input=document.getElementById(\"searchName\");\r\n     if(input != null){\r\n        input.addEventListener(\"keydown\", function(event) {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n            document.getElementById(\"description\").focus()\r\n        }\r\n    })};\r\n\r\n    return(\r\n        <div className=\"search\">\r\n                <div className=\"searchInputs\">\r\n                    <input type=\"text\" id=\"searchName\" onChange={handleFilter} autoFocus/>\r\n                   </div>\r\n                {filteredData.length !=0 && (\r\n                <div className=\"dataResult\">\r\n                    {filteredData.slice(0,15).map((value,key)=>{\r\n                        return (\r\n                           \r\n                          <a className=\"dataItem\" href={value.receiptLink}   target=\"_self\">\r\n                              <p>{value.firstName}</p>\r\n                          </a>\r\n                     ); \r\n                     })}\r\n                </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\nexport default  SearchBar;","import React, { useEffect, useState } from 'react'\r\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport base_url from './api/bootapi';\r\nimport { toast } from 'react-toastify';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst Receipt = () => {\r\n\r\n    const [customer, setCustomer] = useState([]);\r\n    const [person, setperson] = useState([]);\r\n   \r\n// for getting all customer list for the dropdown\r\n    const getAllCustomers = () => {\r\n        axios.get(`${base_url}/customer`).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                if (response.data === []) {\r\n                    toast.success(\"customer has been loaded\", {\r\n                        position: \"bottom-center\",\r\n                    });\r\n                }\r\n                setCustomer(response.data);\r\n            },\r\n\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"something went wrong\", {\r\n                    position: \"bottom-center\",\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    const getCustomerDetail = (inputValue) => {\r\n        axios.get(`${base_url}/customer/${inputValue}`).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                if (response.data === []) {\r\n                    toast.success(\"No customer found\", {\r\n                        position: \"bottom-center\",\r\n                    });\r\n                }\r\n                setperson(response.data);\r\n            },\r\n\r\n            (error) => {\r\n                console.log(error);\r\n               \r\n            }\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllCustomers();\r\n        document.title = \"Cash Receipt\"\r\n    }, []);\r\n\r\n\r\n   //form handler\r\n    const handleForm = (e) => {\r\n        console.log(person);\r\n        postDatatoServer(person);\r\n        e.target.reset()\r\n        document.getElementById(\"controllable-states-demo\").focus()\r\n        e.preventDefault();\r\n    }\r\n\r\n    //creating function t post data to server\r\n    const postDatatoServer = (data) => {\r\n        axios.put(`${base_url}/customer/`, data).then(\r\n            (response) => {\r\n                console.log(response);\r\n                setperson({ ...person, totalAmountPending: response.data.totalAmountPending });\r\n                document.getElementById(\"totalAmountPending\").value = response.data.totalAmountPending\r\n                toast.success(\"Entry has been added successfully\", {\r\n                    position: \"bottom-center\",\r\n                });\r\n            }, (error) => {\r\n                console.log(error);\r\n                console.log(\"error\");\r\n            }\r\n        )\r\n    }\r\n    let buttonInput = document.getElementById(\"add\");\r\n    let input = document.getElementById(\"description\");\r\n    let inputs = document.getElementById(\"add\");\r\n\r\n    if (input != null && inputs != null) {\r\n        input.addEventListener(\"keydown\", function (event) {\r\n            if (event.keyCode === 13) {\r\n                event.preventDefault();\r\n                document.getElementById(\"creditAmountReceived\").focus()\r\n            }\r\n        });\r\n        inputs.addEventListener(\"keydown\", function (event) {\r\n            if (event.keyCode === 13) {\r\n                event.preventDefault();\r\n                document.getElementById(\"description\").focus()\r\n            }\r\n        });\r\n    }\r\n    function custom(event) {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n            document.getElementById(\"description\").focus()\r\n        }\r\n    }\r\n    const [inputValue, setInputValue] = React.useState('');\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center\">Add CashReceipt</h1>\r\n            <br></br>\r\n\r\n            <div style={{ height: 5 }}>\r\n                <Autocomplete\r\n                    inputValue={inputValue}\r\n                    onInputChange={(event, newInputValue) => {\r\n                        setInputValue(newInputValue);\r\n                        getCustomerDetail(newInputValue)\r\n                        //   setDatewise({...datewise,firstName:newInputValue});\r\n                    }}\r\n                    id=\"controllable-states-demo\"\r\n                    options={customer}\r\n                    getOptionLabel={(option) => option.name}\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Search Name\" variant=\"outlined\" size=\"small\" />}\r\n                />\r\n            </div>\r\n            <br></br>\r\n            <Form onSubmit={handleForm}>\r\n\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"description\" style={{ width: 300 }}>Description</label>\r\n                    <Input type=\"textarea\" placeholder=\"Enter Description\" name=\"description\" id=\"description\" maxlength=\"110\"\r\n                        onChange={(e) => {\r\n                            setperson({ ...person, description: e.target.value });\r\n                        }} style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"totalAmountPending\" style={{ width: 300 }}>Total Amount Pending</label>\r\n                    <Input type=\"text\" defaultValue={person.totalAmountPending} readOnly=\"totalAmountPending\" id=\"totalAmountPending\"\r\n                        style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"creditAmountReceived\" style={{ width: 300 }}>Credit Amount</label>\r\n                    <Input placeholder=\"Enter Credit Amount\" name=\"creditAmountReceived\" id=\"creditAmountReceived\" required\r\n                        onChange={(e) => {\r\n                            setperson({ ...person, creditAmountReceived: e.target.value });\r\n                        }} style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"transactionEffectiveDate\" style={{ width: 300 }}>Transaction Date</label>\r\n                    <Input type=\"date\" placeholder=\"Enter Date\" defaultValue={person.transactionEffectiveDate}  name=\"transactionEffectiveDate\" id=\"transactionEffectiveDate\" required   onChange={(e) => {\r\n                            setperson({ ...person, transactionEffectiveDate: e.target.value });\r\n                        }} \r\n                        style={{ width: 300 }} />\r\n                </FormGroup>\r\n\r\n                <Container>\r\n                    <Button type=\"submit\" color=\"success\" id=\"add\" >Add Entry</Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button type=\"reset\" color=\"warning\">Clear</Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Link to={`/update-entry/${false}`}><Button color=\"success\">Update Entry</Button></Link>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Link to={`/delete-entry/${false}`}><Button color=\"danger\">Delete Entry</Button></Link>\r\n                </Container>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\nexport default withRouter(Receipt);","import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Col, Table, Button } from \"reactstrap\";\r\nimport base_url from './api/bootapi';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst CashBook = () => {\r\n\r\n  useEffect(() => {\r\n    document.title = \"Ledger\";\r\n\r\n  }, []);\r\n\r\n  const data = {\r\n    \"id\": 1,\r\n    \"firstName\": \"RATAN MAJUR\",\r\n    \"lastName\": null,\r\n    \"transactionEffectiveDate\": null,\r\n    \"totalAmountPending\": 0,\r\n    \"description\": null,\r\n    \"creditAmountReceived\": 0,\r\n    \"debitAmountReceived\": 0,\r\n    \"receiptLink\": null,\r\n    \"paymentLink\": null,\r\n    \"fromDate\": \"2021-04-01\",\r\n    \"toDate\": \"2022-03-31\"\r\n  }\r\n\r\n  const [dates, setDates] = useState([]);\r\n  const [dateWiseBalance, setDateWiseBalance] = useState([])\r\n  const [datewise, setDatewise] = useState(data);\r\n  const [customer, setCustomer] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([])\r\n\r\n\r\n  const getAllCustomers = () => {\r\n    axios.get(`${base_url}/customer`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        if (response.data === []) {\r\n          toast.success(\"customer has been loaded\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        }\r\n        setCustomer(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllCustomers();\r\n  }, [])\r\n\r\n\r\n  const datewiseCustomers = (data) => {\r\n    if (data.fromDate > data.toDate) {\r\n      toast.error(\"From Date Should Be Bigger\", {\r\n        position: \"bottom-center\",\r\n      })\r\n    } else {\r\n      axios.put(`${base_url}/customer/datewise`, data).then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          if (response.data.length === 0) {\r\n            toast.error(\"No Record Found\", {\r\n              position: \"bottom-center\",\r\n            })\r\n          }\r\n          setDates(response.data);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n          toast.error(\"something went wrong\", {\r\n            position: \"bottom-center\",\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  const EndingDateWiseBalance = (data) => {\r\n    axios.put(`${base_url}/customer/endingDateWiseBalance`, data).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setDateWiseBalance(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"something went wrong\", {\r\n          position: \"bottom-center\",\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  const datelist = dates.filter((val)=>{ \r\n    if (val.creditAmountReceived !== 0) {\r\n    return val\r\n  }}).map(customer => {\r\n   \r\n    return <tr key={customer.id}>\r\n    <td>{customer.transactionEffectiveDate}</td>\r\n       <td style={{ whiteSpace: 'nowrap' }}>{customer.firstName}</td>\r\n      <td>{customer.creditAmountReceived}</td>\r\n    </tr>\r\n  });\r\n\r\n  const datedebitlist = dates.filter((val) => {\r\n    if (val.debitAmountReceived !== 0) {\r\n      return val\r\n    }\r\n  }).map(customer => {\r\n\r\n    return <tr key={customer.id}>\r\n       <td>{customer.transactionEffectiveDate}</td>\r\n       <td style={{ whiteSpace: 'nowrap' }}>{customer.firstName}</td>\r\n      <td>{customer.debitAmountReceived}</td>\r\n     \r\n     \r\n    </tr>\r\n  });\r\n\r\n\r\n  const handleForm = (e) => {\r\n    console.log(datewise);\r\n    datewiseCustomers(datewise);\r\n    EndingDateWiseBalance(datewise)\r\n    e.preventDefault();\r\n  }\r\n  \r\n  \r\n  const [inputValue, setInputValue] = React.useState('');\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <br></br>\r\n      <br></br>\r\n      <div>\r\n        <div style={{ height: 5 }}>\r\n          <Autocomplete\r\n            inputValue={inputValue}\r\n            onInputChange={(event, newInputValue) => {\r\n              setInputValue(newInputValue);\r\n              setDatewise({ ...datewise, firstName: newInputValue });\r\n            }}\r\n            id=\"controllable-states-demo\"\r\n            options={customer}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 250 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Search Name\" variant=\"outlined\" size=\"small\" />}\r\n          />\r\n        </div>\r\n\r\n\r\n        <form onSubmit={handleForm} class=\"form-inline\">\r\n          <label for=\"fromDate\" style={{ marginLeft: 275 }}>From:</label>\r\n          <input type=\"date\" defaultValue={datewise.fromDate} id=\"fromDate\" style={{ marginLeft: 5 }} onChange={(e) => {\r\n            setDatewise({ ...datewise, fromDate: e.target.value })\r\n          }} />\r\n          <label for=\"todayDate\" style={{ marginLeft: 40 }}>To:</label>\r\n          <input type=\"date\"  defaultValue={datewise.toDate}id=\"todayDate\" style={{ marginLeft: 5 }} onChange={(e) => {\r\n            setDatewise({ ...datewise, toDate: e.target.value })\r\n          }} />\r\n          <Container  >\r\n            <Button type=\"submit\" color=\"success\" >Search</Button>\r\n          </Container>\r\n        </form>\r\n      </div>\r\n      <br /><br />\r\n      <div>\r\n        <label for=\"endingBalance\">Ending Balance:</label>\r\n        <input type=\"text\" id=\"endingBalance\" defaultValue={dateWiseBalance.endingBalance} readOnly=\"true\" readOnly=\"true\" style={{ marginLeft: 5 }} />\r\n      </div>\r\n      <br />\r\n\r\n      <Row>\r\n        <Col md={6}>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n              <tr>\r\n                <th width=\"15%\">Date</th>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"15%\">Rs</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {datelist}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n        <Col md={6} >\r\n          <Table className=\"mt-4 offset-2\">\r\n            <thead>\r\n              <tr>\r\n                <th width=\"15%\">Date</th>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"15%\">Rs</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {datedebitlist}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\nexport default CashBook;","import React,{useEffect, useState} from 'react'\r\nimport { Button, Container, Form, FormGroup, Input,Col,Table,Row } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport base_url from './api/bootapi';\r\nimport { toast } from 'react-toastify';\r\nimport {useLocation,withRouter} from \"react-router-dom\";\r\nimport SearchBar from './SearchBar';\r\nimport { Link } from 'react-router-dom';\r\nimport Receipt from './Receipt';\r\n\r\n\r\n\r\nconst CashReceipt =(props) => {\r\n\r\n    console.warn(\"props\",props.match.params.firstName)\r\n\r\n    const getAllCustomers = () => {\r\n        \r\n        axios.get(`${base_url}/customer`).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                if(response.data === []){\r\n                toast.success(\"customer has been loaded\",{\r\n                   position: \"bottom-center\", \r\n                });}\r\n                setCustomer(response.data);\r\n            },\r\n\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"something went wrong\",{\r\n                    position: \"bottom-center\", \r\n                 });\r\n            }\r\n        );\r\n };\r\n\r\nuseEffect (() =>{\r\n    getAllCustomers();\r\n    },[]);\r\n\r\n const[customer,setCustomer]= useState([]);\r\n    \r\n   \r\nreturn (\r\n         <div>\r\n               <h1 className=\"text-center\">Add CashReceipt</h1>\r\n            <br></br>\r\n                 <SearchBar  data={customer}/>\r\n          </div>\r\n    );\r\n};\r\nexport default  withRouter(CashReceipt);","import React, { useEffect, useState } from 'react';\r\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport base_url from './api/bootapi';\r\nimport { toast } from 'react-toastify';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport \"./UpdateSingleEntry.css\"\r\n\r\nconst UpdateSingleEntry = (props) => {\r\n    useEffect(() => {\r\n        document.title = \"Update Entry\";\r\n    }, [])\r\n\r\n    const [entry, setEntry] = useState(0)\r\n    const [isClicked, setIsClicked] = useState(false)\r\n    const [person,setperson]=useState([])  \r\n    const [inputValue, setInputValue] = React.useState('');\r\n    const [customer, setCustomer] = useState([]);\r\n    const [isChanged,setIsChanged]=useState(false) \r\n\r\n\r\n    const getAllCustomers = () => {\r\n        axios.get(`${base_url}/customer`).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                if (response.data === []) {\r\n                    toast.success(\"customer has been loaded\", {\r\n                        position: \"bottom-center\",\r\n                    });\r\n                }\r\n                setCustomer(response.data);\r\n            },\r\n\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"something went wrong\", {\r\n                    position: \"bottom-center\",\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllCustomers();\r\n        document.title = \"Cash Receipt\"\r\n    }, []);\r\n\r\n   \r\n    const getCustomerDetail = (entry) => {\r\n        axios.get(`${base_url}/customer/entry/${entry.id}`).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                if (response.data === '') {\r\n                    setIsClicked(false)\r\n                    toast.success(\"No Voucher found\", {\r\n                        position: \"bottom-center\",\r\n                    });\r\n                }else{\r\n                setIsClicked(true)\r\n                setperson(response.data);\r\n                }\r\n              },\r\n\r\n            (error) => {\r\n                console.log(error);\r\n\r\n            }\r\n        );\r\n    };\r\n\r\n    const postDatatoServer = (data) => {\r\n        axios.put(`${base_url}/customer/updateEntry`, data).then(\r\n            (response) => {\r\n                console.log(response);\r\n                document.getElementById(\"totalAmountPending\").value = response.data.amountPendingEntry\r\n                setIsClicked(false)\r\n                toast.success(\"Entry has been added successfully\", {\r\n                    position: \"bottom-center\",\r\n                });\r\n            }, (error) => {\r\n                console.log(error);\r\n                console.log(\"error\");\r\n            }\r\n        )\r\n    }\r\n\r\n    const callForm = (e) => {\r\n        console.log(person);\r\n        postDatatoServer(person);\r\n        e.target.reset()\r\n        document.getElementById(\"controllable-states-demo\").focus()\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    const handleForm = (e) => {\r\n        console.log(entry);\r\n        getCustomerDetail(entry);\r\n        e.target.reset()\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isClicked && \r\n            <Form onSubmit={handleForm}>\r\n\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"entry id\" style={{ width: 300 }}>Enter Voucher Number</label>\r\n                    <Input type=\"number\" name=\"entry id\" id=\"entry id\" maxlength=\"110\"\r\n                        onChange={(e) => {\r\n                            setEntry({ ...entry, id: e.target.value });\r\n                        }} style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n                <Container>\r\n                    <Button type=\"submit\" color=\"success\"  >Find Entry</Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button type=\"reset\" color=\"warning\">Clear</Button>\r\n                </Container>\r\n            </Form>\r\n}\r\n\r\n           \r\n         \r\n            <br></br>\r\n\r\n            {isClicked && \r\n            <div>\r\n                <div  class=\"onerow\">\r\n                    <label for=\"firstName\" style={{ width: 300 }}>Description</label>\r\n                    <Input type=\"text\"  defaultValue={person.firstName}  readOnly=\"true\"  name=\"firstName\" id=\"firstName\" maxlength=\"110\"\r\n                        onChange={(e) => {\r\n                            setperson({ ...person, description: e.target.value });\r\n                        }} style={{ width: 300 }} />\r\n                </div>\r\n             \r\n\r\n               <div class=\"onerow\">\r\n               <Autocomplete\r\n                    inputValue={inputValue}\r\n                    onInputChange={(event, newInputValue) => {\r\n                        setInputValue(newInputValue);\r\n                        setperson({...person,firstName:newInputValue});\r\n                    }}\r\n                    id=\"controllable-states-demo\"\r\n                    options={customer}\r\n                    getOptionLabel={(option) => option.name}\r\n                    style={{ width: 220 , marginLeft:25}}\r\n                    renderInput={(params) => <TextField {...params} label=\"Search Name\" variant=\"outlined\" size=\"small\" />}\r\n                />\r\n                </div>\r\n\r\n              \r\n            <Form onSubmit={callForm}>\r\n                <FormGroup>\r\n                   \r\n                </FormGroup>\r\n                <br></br>\r\n                <FormGroup>\r\n                    <label for=\"description\" style={{ width: 300 }}>Description</label>\r\n                    <Input type=\"textarea\" placeholder=\"Enter Description\" name=\"description\" id=\"description\" maxlength=\"110\"\r\n                        onChange={(e) => {\r\n                            setperson({ ...person, description: e.target.value });\r\n                        }} style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"totalAmountPending\" style={{ width: 300 }}>Total Amount Pending</label>\r\n                    <Input type=\"text\" defaultValue={person.totalAmountPending} readOnly=\"totalAmountPending\" id=\"totalAmountPending\"\r\n                        style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n                        \r\n                <FormGroup>\r\n                    <label for=\"creditAmountReceived\" style={{ width: 300 }}>{props.match.params.boolean == \"false\" ? \"Credit Amount\" : \"Debit Amount\"}</label>\r\n                    <Input placeholder=\"Enter Credit Amount\"  defaultValue={props.match.params.boolean == \"false\" ? person.creditAmountReceived : person.debitAmountReceived}name=\"creditAmountReceived\" id=\"creditAmountReceived\" required\r\n                        onChange={(e) => {\r\n                            {props.match.params.boolean == \"false\"? setperson({ ...person, creditAmountReceived: e.target.value }) :\r\n                            setperson({ ...person, debitAmountReceived: e.target.value })}\r\n                            \r\n                        }} style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"transactionEffectiveDate\" style={{ width: 300 }}>Transaction Date</label>\r\n                    <Input type=\"date\" placeholder=\"Enter Date\" defaultValue={person.transactionEffectiveDate} name=\"transactionEffectiveDate\" id=\"transactionEffectiveDate\" required onChange={(e) => {\r\n                        setperson({ ...person, transactionEffectiveDate: e.target.value });\r\n                    }}\r\n                        style={{ width: 300 }} />\r\n                </FormGroup>\r\n\r\n                <Container>\r\n                    <Button type=\"submit\" color=\"success\" id=\"add\" >Add Entry</Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button type=\"reset\" color=\"warning\">Clear</Button>\r\n                </Container>\r\n            </Form>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateSingleEntry;","import React, {useEffect, useState } from 'react'\r\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport base_url from './api/bootapi';\r\nimport { toast } from 'react-toastify';\r\nimport {withRouter } from \"react-router-dom\";\r\nimport SearchBar from './SearchBar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Payment = () => {\r\n    \r\n    const [customer, setCustomer] = useState([]);\r\n    const [person, setperson] = useState([]);\r\n  \r\n    const getAllCustomers = () => {\r\n    axios.get(`${base_url}/customer`).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                if (response.data === []) {\r\n                    toast.success(\"customer has been loaded\", {\r\n                        position: \"bottom-center\",\r\n                    });\r\n                }\r\n                setCustomer(response.data);\r\n            },\r\n\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"something went wrong\", {\r\n                    position: \"bottom-center\",\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    const getCustomerDetail = (inputValue) => {\r\n        axios.get(`${base_url}/customer/${inputValue}`).then(\r\n                (response) => {\r\n                    console.log(response.data);\r\n                    if (response.data === []) {\r\n                        toast.success(\"No customer found\", {\r\n                            position: \"bottom-center\",\r\n                        });\r\n                    }\r\n                    setperson(response.data);\r\n                },\r\n    \r\n                (error) => {\r\n                    console.log(error);\r\n                   \r\n                }\r\n            );\r\n        };\r\n\r\n    useEffect (() =>{\r\n        getAllCustomers();\r\n        document.title=\"Cash Payment\"\r\n        },[]);\r\n    \r\n    //form handler\r\n    const handleForm = (e) => {\r\n        console.log(person);\r\n        postDatatoServer(person);\r\n        e.target.reset()\r\n        document.getElementById(\"controllable-states-demo\").focus()\r\n        e.preventDefault();\r\n    }\r\n\r\n    //creating function t post data to server\r\n    const postDatatoServer = (data) => {\r\n        axios.put(`${base_url}/customer/`, data).then(\r\n            (response) => {\r\n                console.log(response);\r\n                setperson({ ...person, totalAmountPending: response.data.totalAmountPending });\r\n                document.getElementById(\"totalAmountPending\").value = response.data.totalAmountPending\r\n                toast.success(\"Entry has been added successfully\", {\r\n                    position: \"bottom-center\",\r\n                });\r\n     }, (error) => {\r\n                console.log(error);\r\n                console.log(\"error\");\r\n            }\r\n        )\r\n    }\r\n  \r\n    let input=document.getElementById(\"description\");\r\n    let inputs=document.getElementById(\"add\");\r\n    \r\n    if(input != null && inputs != null){\r\n        input.addEventListener(\"keydown\", function(event) {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n            document.getElementById(\"debitAmountReceived\").focus()\r\n        }\r\n    });\r\n      inputs.addEventListener(\"keydown\", function(event) {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n            document.getElementById(\"description\").focus()\r\n        }\r\n    });\r\n   }\r\n  \r\n   const [value, setValue] = React.useState([]);\r\n   const [inputValue, setInputValue] = React.useState('');\r\n\r\n    return (\r\n        <div>\r\n        <h1 className=\"text-center\">Add CashPayment</h1>\r\n        <br></br>\r\n\r\n        <div style={{height:5}}>\r\n              <Autocomplete\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n          getCustomerDetail(newInputValue)\r\n        }}\r\n\r\n        id=\"controllable-states-demo\"\r\n        options={customer}\r\n        getOptionLabel={(option) => option.name}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => <TextField {...params} label=\"Search Name\" variant=\"outlined\" size=\"small\" />}\r\n      />\r\n        </div>\r\n         <br></br>\r\n        <Form onSubmit={handleForm}>\r\n               \r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"description\" style={{ width: 300 }}>Description</label>\r\n                    <Input type=\"textarea\" placeholder=\"Enter Description\" name=\"description\" id=\"description\"    maxlength=\"110\"\r\n                        onChange={(e) => {\r\n                            setperson({ ...person, description: e.target.value });\r\n                        }} style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"totalAmountPending\" style={{ width: 300 }}>Total Amount Pending</label>\r\n                    <Input type=\"text\" defaultValue={person.totalAmountPending} readOnly=\"totalAmountPending\" id=\"totalAmountPending\"\r\n                        style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"debitAmountReceived\" style={{ width: 300 }}>Debit Amount</label>\r\n                    <Input placeholder=\"Enter Debit Amount\" name=\"debitAmountReceived\" id=\"debitAmountReceived\" required\r\n                        onChange={(e) => {\r\n                            setperson({ ...person, debitAmountReceived: e.target.value });\r\n                        }} style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                    <label for=\"transactionEffectiveDate\" style={{ width: 300 }}>Transaction Date</label>\r\n                    <Input type=\"date\" placeholder=\"Enter Date\" defaultValue={person.transactionEffectiveDate}  name=\"transactionEffectiveDate\" id=\"transactionEffectiveDate\" required\r\n                      onChange={(e) => {\r\n                        setperson({ ...person, transactionEffectiveDate: e.target.value })}}  style={{ width: 300 }} />\r\n                </FormGroup>\r\n\r\n                <Container>\r\n                    <Button type=\"submit\" color=\"success\"  id=\"add\" >Add Entry</Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button type=\"reset\" color=\"warning\">Clear</Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Link to={`/update-entry/${true}`}><Button color=\"success\">Update Entry</Button></Link>\r\n                </Container>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\nexport default withRouter(Payment);","import React, { useEffect, useState } from 'react'\r\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport base_url from './api/bootapi';\r\nimport { toast } from 'react-toastify';\r\nimport Customer from './Customer';\r\n\r\nconst UpdateName = (props) => {\r\n\r\n    const [customer, setCustomer] = useState({});\r\n    \r\n\r\n    useEffect(() => {\r\n        document.title = \"Update Customer\";\r\n    }, []);\r\n// to fetch current name and display in current name box\r\n    // useEffect (async () =>{ \r\n    //     let result =await fetch(`${base_url}/customer/person/${props.match.params.id}`);\r\n    //     result =  await result.json();\r\n    //     setCustomer(result)\r\n    // },[])\r\n\r\n    //form handler\r\n    const handleForm = (e) => {\r\n        console.log(customer);\r\n        postDatatoServer(customer);\r\n        e.target.reset()\r\n        e.preventDefault();\r\n    }\r\n\r\n    //creating function t post data to server\r\n    const postDatatoServer = (data) => {\r\n        axios.put(`${base_url}/customer/updateCustomer/${props.match.params.id}`, data).then(\r\n            (response) => {\r\n                console.log(response);\r\n                 {\r\n                    toast.success(\"Customer has been updated successfully\", {\r\n                        position: \"bottom-center\",\r\n                    });\r\n                }\r\n            }, (error) => {\r\n                console.log(error);\r\n                console.log(\"error\");\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n     return (\r\n        <div>\r\n            <h1 className=\"text-center\">Update Customer</h1>\r\n            <br></br>\r\n            <Form onSubmit={handleForm}>\r\n                <FormGroup>\r\n                    <label for=\"firstName\" style={{ width: 300 }}>FirstName</label>\r\n                    <Input type=\"text\" placeholder=\"Enter FirstName\" name=\"firstName\" id=\"firstName\" required maxlength=\"45\" onChange={(e) => {\r\n                        setCustomer({ ...customer, name: e.target.value.toUpperCase() });\r\n                    }} style={{ width: 300 }} />\r\n                </FormGroup>\r\n                <br></br>\r\n                <Container>\r\n                    <Button type=\"submit\" color=\"success\"  >Update Customer</Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button type=\"reset\" color=\"warning\">Clear</Button>\r\n                </Container>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\nexport default UpdateName;","import React, { useState,useEffect } from 'react'\r\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap'\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport base_url from \"./api/bootapi\";\r\nconst DeleteEntry =(props) =>{\r\n\r\n    useEffect(() => {\r\n        document.title = \"Delete Entry\";\r\n    }, [])\r\n        const[entry,setEntry]=useState(0)\r\n\r\n    const deleteCourse = (entry) => {\r\n        axios.delete(`${base_url}/customer/deleteEntry/${entry.id}`).then(\r\n            (response)=>{\r\n                toast.success(\"deleted successfully\");\r\n            },\r\n            (error)=>{\r\n                toast.error(\"Data Exists\");\r\n\r\n            }\r\n        )\r\n    }\r\n    \r\n    const handleForm = (e) => {\r\n        console.log(entry);\r\n        deleteCourse(entry);\r\n        e.target.reset()\r\n        e.preventDefault();\r\n    }\r\n\r\n    return(\r\n        <Form onSubmit={handleForm}>\r\n\r\n        <br></br>\r\n\r\n        <FormGroup>\r\n            <label for=\"entry id\" style={{ width: 300 }}>Enter Voucher Number</label>\r\n            <Input type=\"number\" name=\"entry id\" id=\"entry id\" maxlength=\"110\"\r\n                onChange={(e) => {\r\n                    setEntry({ ...entry, id: e.target.value });\r\n                }} style={{ width: 300 }} />\r\n        </FormGroup>\r\n        <br></br>\r\n\r\n        <Container>\r\n            <Button type=\"submit\" color=\"success\"  >Delete Entry</Button>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Button type=\"reset\" color=\"warning\">Clear</Button>\r\n        </Container>\r\n    </Form>\r\n    )\r\n}\r\nexport default DeleteEntry;","import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport{Container,Row,Col} from \"reactstrap\";\nimport { ToastContainer} from 'react-toastify';\nimport AllCustomers from './AllCustomers';\nimport AddCustomer from './AddCustomer';\nimport Menus from './Menus';\nimport {BrowserRouter as Router,Route} from \"react-router-dom\";\nimport ViewCustomer from './ViewCustomer';\nimport AddEntry from './AddEntry';\nimport CashBook from './CashBook';\nimport CashReceipt from './CashReceipt';\nimport Ledger from './Ledger';\nimport UpdateSingleEntry from './UpdateSingleEntry';\nimport Receipt from './Receipt';\nimport Payment from './Payment';\nimport 'react-app-polyfill/stable'\nimport UpdateName from './UpdateName';\nimport DeleteEntry from './DeleteEntry';\n\nfunction App(){\n \n\n  return( \n  <div>\n   <Router>\n   <ToastContainer />\n       <Container>\n        <Header />\n       \n <Row>\n          <Col md={4}>\n              <Menus />\n          </Col>\n          <Col md={8}>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/add-customer\" component={AddCustomer} exact />\n            <Route path=\"/view-customers\" component={AllCustomers} exact />\n            <Route path=\"/view-customer/:firstName\" component={ViewCustomer} exact />\n            <Route path=\"/update-customer/:firstName\" component={AddEntry} exact />\n            <Route path=\"/update-name/:id\" component={UpdateName} exact />\n            <Route path=\"/Balance\" component={CashBook} exact />\n            <Route path=\"/Balance-CashReceipt\"  component={Receipt} exact />\n            <Route path=\"/addreceipt-customer/:firstName\" component={Receipt} exact />\n            <Route path=\"/Balance-CashPayment\"  component={Payment} exact />\n            <Route path=\"/addpayment-customer/:firstName\" component={Payment} exact />\n            <Route path=\"/Balance-CashBook\"  component={Ledger} exact />\n            <Route path=\"/update-entry/:boolean\"  component={UpdateSingleEntry} exact />\n            <Route path=\"/delete-entry/:boolean\"  component={DeleteEntry} exact />\n          </Col>\n        </Row>\n       </Container>\n   </Router>\n\n     </div>\n     );\n \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}